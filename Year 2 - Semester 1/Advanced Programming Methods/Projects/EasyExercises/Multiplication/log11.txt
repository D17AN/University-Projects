ID: 1
Execution Stack:
int v1|int v2|v1 = 3|v2 = 4|if(v1 != 0){Print(MUL(v1, v2))}else{Print(v1)}
SymbolTable:
Output list:
File table:
Heap memory:

ID: 1
Execution Stack:
int v2|v1 = 3|v2 = 4|if(v1 != 0){Print(MUL(v1, v2))}else{Print(v1)}
int v1
SymbolTable:
Output list:
File table:
Heap memory:

ID: 1
Execution Stack:
int v2|v1 = 3|v2 = 4|if(v1 != 0){Print(MUL(v1, v2))}else{Print(v1)}
int v1
SymbolTable:
Output list:
File table:
Heap memory:

ID: 1
Execution Stack:
int v2|v1 = 3|v2 = 4|if(v1 != 0){Print(MUL(v1, v2))}else{Print(v1)}
SymbolTable:
v1 -> 0
Output list:
File table:
Heap memory:

ID: 1
Execution Stack:
int v2|v1 = 3|v2 = 4|if(v1 != 0){Print(MUL(v1, v2))}else{Print(v1)}
SymbolTable:
v1 -> 0
Output list:
File table:
Heap memory:

ID: 1
Execution Stack:
v1 = 3|v2 = 4|if(v1 != 0){Print(MUL(v1, v2))}else{Print(v1)}
int v2
SymbolTable:
v1 -> 0
Output list:
File table:
Heap memory:

ID: 1
Execution Stack:
v1 = 3|v2 = 4|if(v1 != 0){Print(MUL(v1, v2))}else{Print(v1)}
int v2
SymbolTable:
v1 -> 0
Output list:
File table:
Heap memory:

ID: 1
Execution Stack:
v1 = 3|v2 = 4|if(v1 != 0){Print(MUL(v1, v2))}else{Print(v1)}
SymbolTable:
v1 -> 0
v2 -> 0
Output list:
File table:
Heap memory:

ID: 1
Execution Stack:
v1 = 3|v2 = 4|if(v1 != 0){Print(MUL(v1, v2))}else{Print(v1)}
SymbolTable:
v1 -> 0
v2 -> 0
Output list:
File table:
Heap memory:

ID: 1
Execution Stack:
v2 = 4|if(v1 != 0){Print(MUL(v1, v2))}else{Print(v1)}
v1 = 3
SymbolTable:
v1 -> 0
v2 -> 0
Output list:
File table:
Heap memory:

ID: 1
Execution Stack:
v2 = 4|if(v1 != 0){Print(MUL(v1, v2))}else{Print(v1)}
v1 = 3
SymbolTable:
v1 -> 0
v2 -> 0
Output list:
File table:
Heap memory:

ID: 1
Execution Stack:
v2 = 4|if(v1 != 0){Print(MUL(v1, v2))}else{Print(v1)}
SymbolTable:
v1 -> 3
v2 -> 0
Output list:
File table:
Heap memory:

ID: 1
Execution Stack:
v2 = 4|if(v1 != 0){Print(MUL(v1, v2))}else{Print(v1)}
SymbolTable:
v1 -> 3
v2 -> 0
Output list:
File table:
Heap memory:

ID: 1
Execution Stack:
if(v1 != 0){Print(MUL(v1, v2))}else{Print(v1)}
v2 = 4
SymbolTable:
v1 -> 3
v2 -> 0
Output list:
File table:
Heap memory:

ID: 1
Execution Stack:
if(v1 != 0){Print(MUL(v1, v2))}else{Print(v1)}
v2 = 4
SymbolTable:
v1 -> 3
v2 -> 0
Output list:
File table:
Heap memory:

ID: 1
Execution Stack:
if(v1 != 0){Print(MUL(v1, v2))}else{Print(v1)}
SymbolTable:
v1 -> 3
v2 -> 4
Output list:
File table:
Heap memory:

ID: 1
Execution Stack:
if(v1 != 0){Print(MUL(v1, v2))}else{Print(v1)}
SymbolTable:
v1 -> 3
v2 -> 4
Output list:
File table:
Heap memory:

ID: 1
Execution Stack:
Print(MUL(v1, v2))
SymbolTable:
v1 -> 3
v2 -> 4
Output list:
File table:
Heap memory:

ID: 1
Execution Stack:
Print(MUL(v1, v2))
SymbolTable:
v1 -> 3
v2 -> 4
Output list:
File table:
Heap memory:

ID: 1
Execution Stack:
SymbolTable:
v1 -> 3
v2 -> 4
Output list:
5
File table:
Heap memory:

