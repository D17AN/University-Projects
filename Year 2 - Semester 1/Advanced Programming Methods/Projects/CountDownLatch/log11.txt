ID: 1
Execution Stack:
Reference(int) v1|Reference(int) v2|Reference(int) v3|int cnt|New(v1,2)|New(v2,3)|New(v3,4)|newLatch(cnt, ReadHeap(v2))|Fork(WriteHeap(v1, 10 * ReadHeap(v1))|Print(ReadHeap(v1))|countDown(cnt)|Fork(WriteHeap(v2, 10 * ReadHeap(v2))|Print(ReadHeap(v2))|countDown(cnt)|Fork(WriteHeap(v3, 10 * ReadHeap(v3))|Print(ReadHeap(v3))|countDown(cnt))))|await(cnt)|Print(100)|countDown(cnt)|Print(100)
SymbolTable:
Output list:
File table:
Heap memory:
Latch Table:

ID: 1
Execution Stack:
Reference(int) v2|Reference(int) v3|int cnt|New(v1,2)|New(v2,3)|New(v3,4)|newLatch(cnt, ReadHeap(v2))|Fork(WriteHeap(v1, 10 * ReadHeap(v1))|Print(ReadHeap(v1))|countDown(cnt)|Fork(WriteHeap(v2, 10 * ReadHeap(v2))|Print(ReadHeap(v2))|countDown(cnt)|Fork(WriteHeap(v3, 10 * ReadHeap(v3))|Print(ReadHeap(v3))|countDown(cnt))))|await(cnt)|Print(100)|countDown(cnt)|Print(100)
Reference(int) v1
SymbolTable:
Output list:
File table:
Heap memory:
Latch Table:

ID: 1
Execution Stack:
Reference(int) v2|Reference(int) v3|int cnt|New(v1,2)|New(v2,3)|New(v3,4)|newLatch(cnt, ReadHeap(v2))|Fork(WriteHeap(v1, 10 * ReadHeap(v1))|Print(ReadHeap(v1))|countDown(cnt)|Fork(WriteHeap(v2, 10 * ReadHeap(v2))|Print(ReadHeap(v2))|countDown(cnt)|Fork(WriteHeap(v3, 10 * ReadHeap(v3))|Print(ReadHeap(v3))|countDown(cnt))))|await(cnt)|Print(100)|countDown(cnt)|Print(100)
Reference(int) v1
SymbolTable:
Output list:
File table:
Heap memory:
Latch Table:

ID: 1
Execution Stack:
Reference(int) v2|Reference(int) v3|int cnt|New(v1,2)|New(v2,3)|New(v3,4)|newLatch(cnt, ReadHeap(v2))|Fork(WriteHeap(v1, 10 * ReadHeap(v1))|Print(ReadHeap(v1))|countDown(cnt)|Fork(WriteHeap(v2, 10 * ReadHeap(v2))|Print(ReadHeap(v2))|countDown(cnt)|Fork(WriteHeap(v3, 10 * ReadHeap(v3))|Print(ReadHeap(v3))|countDown(cnt))))|await(cnt)|Print(100)|countDown(cnt)|Print(100)
SymbolTable:
v1 -> (0, int)
Output list:
File table:
Heap memory:
Latch Table:

ID: 1
Execution Stack:
Reference(int) v2|Reference(int) v3|int cnt|New(v1,2)|New(v2,3)|New(v3,4)|newLatch(cnt, ReadHeap(v2))|Fork(WriteHeap(v1, 10 * ReadHeap(v1))|Print(ReadHeap(v1))|countDown(cnt)|Fork(WriteHeap(v2, 10 * ReadHeap(v2))|Print(ReadHeap(v2))|countDown(cnt)|Fork(WriteHeap(v3, 10 * ReadHeap(v3))|Print(ReadHeap(v3))|countDown(cnt))))|await(cnt)|Print(100)|countDown(cnt)|Print(100)
SymbolTable:
v1 -> (0, int)
Output list:
File table:
Heap memory:
Latch Table:

ID: 1
Execution Stack:
Reference(int) v3|int cnt|New(v1,2)|New(v2,3)|New(v3,4)|newLatch(cnt, ReadHeap(v2))|Fork(WriteHeap(v1, 10 * ReadHeap(v1))|Print(ReadHeap(v1))|countDown(cnt)|Fork(WriteHeap(v2, 10 * ReadHeap(v2))|Print(ReadHeap(v2))|countDown(cnt)|Fork(WriteHeap(v3, 10 * ReadHeap(v3))|Print(ReadHeap(v3))|countDown(cnt))))|await(cnt)|Print(100)|countDown(cnt)|Print(100)
Reference(int) v2
SymbolTable:
v1 -> (0, int)
Output list:
File table:
Heap memory:
Latch Table:

ID: 1
Execution Stack:
Reference(int) v3|int cnt|New(v1,2)|New(v2,3)|New(v3,4)|newLatch(cnt, ReadHeap(v2))|Fork(WriteHeap(v1, 10 * ReadHeap(v1))|Print(ReadHeap(v1))|countDown(cnt)|Fork(WriteHeap(v2, 10 * ReadHeap(v2))|Print(ReadHeap(v2))|countDown(cnt)|Fork(WriteHeap(v3, 10 * ReadHeap(v3))|Print(ReadHeap(v3))|countDown(cnt))))|await(cnt)|Print(100)|countDown(cnt)|Print(100)
Reference(int) v2
SymbolTable:
v1 -> (0, int)
Output list:
File table:
Heap memory:
Latch Table:

ID: 1
Execution Stack:
Reference(int) v3|int cnt|New(v1,2)|New(v2,3)|New(v3,4)|newLatch(cnt, ReadHeap(v2))|Fork(WriteHeap(v1, 10 * ReadHeap(v1))|Print(ReadHeap(v1))|countDown(cnt)|Fork(WriteHeap(v2, 10 * ReadHeap(v2))|Print(ReadHeap(v2))|countDown(cnt)|Fork(WriteHeap(v3, 10 * ReadHeap(v3))|Print(ReadHeap(v3))|countDown(cnt))))|await(cnt)|Print(100)|countDown(cnt)|Print(100)
SymbolTable:
v1 -> (0, int)
v2 -> (0, int)
Output list:
File table:
Heap memory:
Latch Table:

ID: 1
Execution Stack:
Reference(int) v3|int cnt|New(v1,2)|New(v2,3)|New(v3,4)|newLatch(cnt, ReadHeap(v2))|Fork(WriteHeap(v1, 10 * ReadHeap(v1))|Print(ReadHeap(v1))|countDown(cnt)|Fork(WriteHeap(v2, 10 * ReadHeap(v2))|Print(ReadHeap(v2))|countDown(cnt)|Fork(WriteHeap(v3, 10 * ReadHeap(v3))|Print(ReadHeap(v3))|countDown(cnt))))|await(cnt)|Print(100)|countDown(cnt)|Print(100)
SymbolTable:
v1 -> (0, int)
v2 -> (0, int)
Output list:
File table:
Heap memory:
Latch Table:

ID: 1
Execution Stack:
int cnt|New(v1,2)|New(v2,3)|New(v3,4)|newLatch(cnt, ReadHeap(v2))|Fork(WriteHeap(v1, 10 * ReadHeap(v1))|Print(ReadHeap(v1))|countDown(cnt)|Fork(WriteHeap(v2, 10 * ReadHeap(v2))|Print(ReadHeap(v2))|countDown(cnt)|Fork(WriteHeap(v3, 10 * ReadHeap(v3))|Print(ReadHeap(v3))|countDown(cnt))))|await(cnt)|Print(100)|countDown(cnt)|Print(100)
Reference(int) v3
SymbolTable:
v1 -> (0, int)
v2 -> (0, int)
Output list:
File table:
Heap memory:
Latch Table:

ID: 1
Execution Stack:
int cnt|New(v1,2)|New(v2,3)|New(v3,4)|newLatch(cnt, ReadHeap(v2))|Fork(WriteHeap(v1, 10 * ReadHeap(v1))|Print(ReadHeap(v1))|countDown(cnt)|Fork(WriteHeap(v2, 10 * ReadHeap(v2))|Print(ReadHeap(v2))|countDown(cnt)|Fork(WriteHeap(v3, 10 * ReadHeap(v3))|Print(ReadHeap(v3))|countDown(cnt))))|await(cnt)|Print(100)|countDown(cnt)|Print(100)
Reference(int) v3
SymbolTable:
v1 -> (0, int)
v2 -> (0, int)
Output list:
File table:
Heap memory:
Latch Table:

ID: 1
Execution Stack:
int cnt|New(v1,2)|New(v2,3)|New(v3,4)|newLatch(cnt, ReadHeap(v2))|Fork(WriteHeap(v1, 10 * ReadHeap(v1))|Print(ReadHeap(v1))|countDown(cnt)|Fork(WriteHeap(v2, 10 * ReadHeap(v2))|Print(ReadHeap(v2))|countDown(cnt)|Fork(WriteHeap(v3, 10 * ReadHeap(v3))|Print(ReadHeap(v3))|countDown(cnt))))|await(cnt)|Print(100)|countDown(cnt)|Print(100)
SymbolTable:
v1 -> (0, int)
v2 -> (0, int)
v3 -> (0, int)
Output list:
File table:
Heap memory:
Latch Table:

ID: 1
Execution Stack:
int cnt|New(v1,2)|New(v2,3)|New(v3,4)|newLatch(cnt, ReadHeap(v2))|Fork(WriteHeap(v1, 10 * ReadHeap(v1))|Print(ReadHeap(v1))|countDown(cnt)|Fork(WriteHeap(v2, 10 * ReadHeap(v2))|Print(ReadHeap(v2))|countDown(cnt)|Fork(WriteHeap(v3, 10 * ReadHeap(v3))|Print(ReadHeap(v3))|countDown(cnt))))|await(cnt)|Print(100)|countDown(cnt)|Print(100)
SymbolTable:
v1 -> (0, int)
v2 -> (0, int)
v3 -> (0, int)
Output list:
File table:
Heap memory:
Latch Table:

ID: 1
Execution Stack:
New(v1,2)|New(v2,3)|New(v3,4)|newLatch(cnt, ReadHeap(v2))|Fork(WriteHeap(v1, 10 * ReadHeap(v1))|Print(ReadHeap(v1))|countDown(cnt)|Fork(WriteHeap(v2, 10 * ReadHeap(v2))|Print(ReadHeap(v2))|countDown(cnt)|Fork(WriteHeap(v3, 10 * ReadHeap(v3))|Print(ReadHeap(v3))|countDown(cnt))))|await(cnt)|Print(100)|countDown(cnt)|Print(100)
int cnt
SymbolTable:
v1 -> (0, int)
v2 -> (0, int)
v3 -> (0, int)
Output list:
File table:
Heap memory:
Latch Table:

ID: 1
Execution Stack:
New(v1,2)|New(v2,3)|New(v3,4)|newLatch(cnt, ReadHeap(v2))|Fork(WriteHeap(v1, 10 * ReadHeap(v1))|Print(ReadHeap(v1))|countDown(cnt)|Fork(WriteHeap(v2, 10 * ReadHeap(v2))|Print(ReadHeap(v2))|countDown(cnt)|Fork(WriteHeap(v3, 10 * ReadHeap(v3))|Print(ReadHeap(v3))|countDown(cnt))))|await(cnt)|Print(100)|countDown(cnt)|Print(100)
int cnt
SymbolTable:
v1 -> (0, int)
v2 -> (0, int)
v3 -> (0, int)
Output list:
File table:
Heap memory:
Latch Table:

ID: 1
Execution Stack:
New(v1,2)|New(v2,3)|New(v3,4)|newLatch(cnt, ReadHeap(v2))|Fork(WriteHeap(v1, 10 * ReadHeap(v1))|Print(ReadHeap(v1))|countDown(cnt)|Fork(WriteHeap(v2, 10 * ReadHeap(v2))|Print(ReadHeap(v2))|countDown(cnt)|Fork(WriteHeap(v3, 10 * ReadHeap(v3))|Print(ReadHeap(v3))|countDown(cnt))))|await(cnt)|Print(100)|countDown(cnt)|Print(100)
SymbolTable:
cnt -> 0
v1 -> (0, int)
v2 -> (0, int)
v3 -> (0, int)
Output list:
File table:
Heap memory:
Latch Table:

ID: 1
Execution Stack:
New(v1,2)|New(v2,3)|New(v3,4)|newLatch(cnt, ReadHeap(v2))|Fork(WriteHeap(v1, 10 * ReadHeap(v1))|Print(ReadHeap(v1))|countDown(cnt)|Fork(WriteHeap(v2, 10 * ReadHeap(v2))|Print(ReadHeap(v2))|countDown(cnt)|Fork(WriteHeap(v3, 10 * ReadHeap(v3))|Print(ReadHeap(v3))|countDown(cnt))))|await(cnt)|Print(100)|countDown(cnt)|Print(100)
SymbolTable:
cnt -> 0
v1 -> (0, int)
v2 -> (0, int)
v3 -> (0, int)
Output list:
File table:
Heap memory:
Latch Table:

ID: 1
Execution Stack:
New(v2,3)|New(v3,4)|newLatch(cnt, ReadHeap(v2))|Fork(WriteHeap(v1, 10 * ReadHeap(v1))|Print(ReadHeap(v1))|countDown(cnt)|Fork(WriteHeap(v2, 10 * ReadHeap(v2))|Print(ReadHeap(v2))|countDown(cnt)|Fork(WriteHeap(v3, 10 * ReadHeap(v3))|Print(ReadHeap(v3))|countDown(cnt))))|await(cnt)|Print(100)|countDown(cnt)|Print(100)
New(v1,2)
SymbolTable:
cnt -> 0
v1 -> (0, int)
v2 -> (0, int)
v3 -> (0, int)
Output list:
File table:
Heap memory:
Latch Table:

ID: 1
Execution Stack:
New(v2,3)|New(v3,4)|newLatch(cnt, ReadHeap(v2))|Fork(WriteHeap(v1, 10 * ReadHeap(v1))|Print(ReadHeap(v1))|countDown(cnt)|Fork(WriteHeap(v2, 10 * ReadHeap(v2))|Print(ReadHeap(v2))|countDown(cnt)|Fork(WriteHeap(v3, 10 * ReadHeap(v3))|Print(ReadHeap(v3))|countDown(cnt))))|await(cnt)|Print(100)|countDown(cnt)|Print(100)
New(v1,2)
SymbolTable:
cnt -> 0
v1 -> (0, int)
v2 -> (0, int)
v3 -> (0, int)
Output list:
File table:
Heap memory:
Latch Table:

ID: 1
Execution Stack:
New(v2,3)|New(v3,4)|newLatch(cnt, ReadHeap(v2))|Fork(WriteHeap(v1, 10 * ReadHeap(v1))|Print(ReadHeap(v1))|countDown(cnt)|Fork(WriteHeap(v2, 10 * ReadHeap(v2))|Print(ReadHeap(v2))|countDown(cnt)|Fork(WriteHeap(v3, 10 * ReadHeap(v3))|Print(ReadHeap(v3))|countDown(cnt))))|await(cnt)|Print(100)|countDown(cnt)|Print(100)
SymbolTable:
cnt -> 0
v1 -> (1, int)
v2 -> (0, int)
v3 -> (0, int)
Output list:
File table:
Heap memory:
1 -> 2
Latch Table:

ID: 1
Execution Stack:
New(v2,3)|New(v3,4)|newLatch(cnt, ReadHeap(v2))|Fork(WriteHeap(v1, 10 * ReadHeap(v1))|Print(ReadHeap(v1))|countDown(cnt)|Fork(WriteHeap(v2, 10 * ReadHeap(v2))|Print(ReadHeap(v2))|countDown(cnt)|Fork(WriteHeap(v3, 10 * ReadHeap(v3))|Print(ReadHeap(v3))|countDown(cnt))))|await(cnt)|Print(100)|countDown(cnt)|Print(100)
SymbolTable:
cnt -> 0
v1 -> (1, int)
v2 -> (0, int)
v3 -> (0, int)
Output list:
File table:
Heap memory:
1 -> 2
Latch Table:

ID: 1
Execution Stack:
New(v3,4)|newLatch(cnt, ReadHeap(v2))|Fork(WriteHeap(v1, 10 * ReadHeap(v1))|Print(ReadHeap(v1))|countDown(cnt)|Fork(WriteHeap(v2, 10 * ReadHeap(v2))|Print(ReadHeap(v2))|countDown(cnt)|Fork(WriteHeap(v3, 10 * ReadHeap(v3))|Print(ReadHeap(v3))|countDown(cnt))))|await(cnt)|Print(100)|countDown(cnt)|Print(100)
New(v2,3)
SymbolTable:
cnt -> 0
v1 -> (1, int)
v2 -> (0, int)
v3 -> (0, int)
Output list:
File table:
Heap memory:
1 -> 2
Latch Table:

ID: 1
Execution Stack:
New(v3,4)|newLatch(cnt, ReadHeap(v2))|Fork(WriteHeap(v1, 10 * ReadHeap(v1))|Print(ReadHeap(v1))|countDown(cnt)|Fork(WriteHeap(v2, 10 * ReadHeap(v2))|Print(ReadHeap(v2))|countDown(cnt)|Fork(WriteHeap(v3, 10 * ReadHeap(v3))|Print(ReadHeap(v3))|countDown(cnt))))|await(cnt)|Print(100)|countDown(cnt)|Print(100)
New(v2,3)
SymbolTable:
cnt -> 0
v1 -> (1, int)
v2 -> (0, int)
v3 -> (0, int)
Output list:
File table:
Heap memory:
1 -> 2
Latch Table:

ID: 1
Execution Stack:
New(v3,4)|newLatch(cnt, ReadHeap(v2))|Fork(WriteHeap(v1, 10 * ReadHeap(v1))|Print(ReadHeap(v1))|countDown(cnt)|Fork(WriteHeap(v2, 10 * ReadHeap(v2))|Print(ReadHeap(v2))|countDown(cnt)|Fork(WriteHeap(v3, 10 * ReadHeap(v3))|Print(ReadHeap(v3))|countDown(cnt))))|await(cnt)|Print(100)|countDown(cnt)|Print(100)
SymbolTable:
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (0, int)
Output list:
File table:
Heap memory:
1 -> 2
2 -> 3
Latch Table:

ID: 1
Execution Stack:
New(v3,4)|newLatch(cnt, ReadHeap(v2))|Fork(WriteHeap(v1, 10 * ReadHeap(v1))|Print(ReadHeap(v1))|countDown(cnt)|Fork(WriteHeap(v2, 10 * ReadHeap(v2))|Print(ReadHeap(v2))|countDown(cnt)|Fork(WriteHeap(v3, 10 * ReadHeap(v3))|Print(ReadHeap(v3))|countDown(cnt))))|await(cnt)|Print(100)|countDown(cnt)|Print(100)
SymbolTable:
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (0, int)
Output list:
File table:
Heap memory:
1 -> 2
2 -> 3
Latch Table:

ID: 1
Execution Stack:
newLatch(cnt, ReadHeap(v2))|Fork(WriteHeap(v1, 10 * ReadHeap(v1))|Print(ReadHeap(v1))|countDown(cnt)|Fork(WriteHeap(v2, 10 * ReadHeap(v2))|Print(ReadHeap(v2))|countDown(cnt)|Fork(WriteHeap(v3, 10 * ReadHeap(v3))|Print(ReadHeap(v3))|countDown(cnt))))|await(cnt)|Print(100)|countDown(cnt)|Print(100)
New(v3,4)
SymbolTable:
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (0, int)
Output list:
File table:
Heap memory:
1 -> 2
2 -> 3
Latch Table:

ID: 1
Execution Stack:
newLatch(cnt, ReadHeap(v2))|Fork(WriteHeap(v1, 10 * ReadHeap(v1))|Print(ReadHeap(v1))|countDown(cnt)|Fork(WriteHeap(v2, 10 * ReadHeap(v2))|Print(ReadHeap(v2))|countDown(cnt)|Fork(WriteHeap(v3, 10 * ReadHeap(v3))|Print(ReadHeap(v3))|countDown(cnt))))|await(cnt)|Print(100)|countDown(cnt)|Print(100)
New(v3,4)
SymbolTable:
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (0, int)
Output list:
File table:
Heap memory:
1 -> 2
2 -> 3
Latch Table:

ID: 1
Execution Stack:
newLatch(cnt, ReadHeap(v2))|Fork(WriteHeap(v1, 10 * ReadHeap(v1))|Print(ReadHeap(v1))|countDown(cnt)|Fork(WriteHeap(v2, 10 * ReadHeap(v2))|Print(ReadHeap(v2))|countDown(cnt)|Fork(WriteHeap(v3, 10 * ReadHeap(v3))|Print(ReadHeap(v3))|countDown(cnt))))|await(cnt)|Print(100)|countDown(cnt)|Print(100)
SymbolTable:
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
File table:
Heap memory:
1 -> 2
2 -> 3
3 -> 4
Latch Table:

ID: 1
Execution Stack:
newLatch(cnt, ReadHeap(v2))|Fork(WriteHeap(v1, 10 * ReadHeap(v1))|Print(ReadHeap(v1))|countDown(cnt)|Fork(WriteHeap(v2, 10 * ReadHeap(v2))|Print(ReadHeap(v2))|countDown(cnt)|Fork(WriteHeap(v3, 10 * ReadHeap(v3))|Print(ReadHeap(v3))|countDown(cnt))))|await(cnt)|Print(100)|countDown(cnt)|Print(100)
SymbolTable:
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
File table:
Heap memory:
1 -> 2
2 -> 3
3 -> 4
Latch Table:

ID: 1
Execution Stack:
Fork(WriteHeap(v1, 10 * ReadHeap(v1))|Print(ReadHeap(v1))|countDown(cnt)|Fork(WriteHeap(v2, 10 * ReadHeap(v2))|Print(ReadHeap(v2))|countDown(cnt)|Fork(WriteHeap(v3, 10 * ReadHeap(v3))|Print(ReadHeap(v3))|countDown(cnt))))|await(cnt)|Print(100)|countDown(cnt)|Print(100)
newLatch(cnt, ReadHeap(v2))
SymbolTable:
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
File table:
Heap memory:
1 -> 2
2 -> 3
3 -> 4
Latch Table:

ID: 1
Execution Stack:
Fork(WriteHeap(v1, 10 * ReadHeap(v1))|Print(ReadHeap(v1))|countDown(cnt)|Fork(WriteHeap(v2, 10 * ReadHeap(v2))|Print(ReadHeap(v2))|countDown(cnt)|Fork(WriteHeap(v3, 10 * ReadHeap(v3))|Print(ReadHeap(v3))|countDown(cnt))))|await(cnt)|Print(100)|countDown(cnt)|Print(100)
newLatch(cnt, ReadHeap(v2))
SymbolTable:
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
File table:
Heap memory:
1 -> 2
2 -> 3
3 -> 4
Latch Table:

ID: 1
Execution Stack:
Fork(WriteHeap(v1, 10 * ReadHeap(v1))|Print(ReadHeap(v1))|countDown(cnt)|Fork(WriteHeap(v2, 10 * ReadHeap(v2))|Print(ReadHeap(v2))|countDown(cnt)|Fork(WriteHeap(v3, 10 * ReadHeap(v3))|Print(ReadHeap(v3))|countDown(cnt))))|await(cnt)|Print(100)|countDown(cnt)|Print(100)
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
File table:
Heap memory:
1 -> 2
2 -> 3
3 -> 4
Latch Table:
1 -> 3

ID: 1
Execution Stack:
Fork(WriteHeap(v1, 10 * ReadHeap(v1))|Print(ReadHeap(v1))|countDown(cnt)|Fork(WriteHeap(v2, 10 * ReadHeap(v2))|Print(ReadHeap(v2))|countDown(cnt)|Fork(WriteHeap(v3, 10 * ReadHeap(v3))|Print(ReadHeap(v3))|countDown(cnt))))|await(cnt)|Print(100)|countDown(cnt)|Print(100)
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
File table:
Heap memory:
1 -> 2
2 -> 3
3 -> 4
Latch Table:
1 -> 3

ID: 1
Execution Stack:
await(cnt)|Print(100)|countDown(cnt)|Print(100)
Fork(WriteHeap(v1, 10 * ReadHeap(v1))|Print(ReadHeap(v1))|countDown(cnt)|Fork(WriteHeap(v2, 10 * ReadHeap(v2))|Print(ReadHeap(v2))|countDown(cnt)|Fork(WriteHeap(v3, 10 * ReadHeap(v3))|Print(ReadHeap(v3))|countDown(cnt))))
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
File table:
Heap memory:
1 -> 2
2 -> 3
3 -> 4
Latch Table:
1 -> 3

ID: 1
Execution Stack:
await(cnt)|Print(100)|countDown(cnt)|Print(100)
Fork(WriteHeap(v1, 10 * ReadHeap(v1))|Print(ReadHeap(v1))|countDown(cnt)|Fork(WriteHeap(v2, 10 * ReadHeap(v2))|Print(ReadHeap(v2))|countDown(cnt)|Fork(WriteHeap(v3, 10 * ReadHeap(v3))|Print(ReadHeap(v3))|countDown(cnt))))
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
File table:
Heap memory:
1 -> 2
2 -> 3
3 -> 4
Latch Table:
1 -> 3

ID: 1
Execution Stack:
await(cnt)|Print(100)|countDown(cnt)|Print(100)
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
File table:
Heap memory:
1 -> 2
2 -> 3
3 -> 4
Latch Table:
1 -> 3

ID: 2
Execution Stack:
WriteHeap(v1, 10 * ReadHeap(v1))|Print(ReadHeap(v1))|countDown(cnt)|Fork(WriteHeap(v2, 10 * ReadHeap(v2))|Print(ReadHeap(v2))|countDown(cnt)|Fork(WriteHeap(v3, 10 * ReadHeap(v3))|Print(ReadHeap(v3))|countDown(cnt)))
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
File table:
Heap memory:
1 -> 2
2 -> 3
3 -> 4
Latch Table:
1 -> 3

ID: 1
Execution Stack:
await(cnt)|Print(100)|countDown(cnt)|Print(100)
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
File table:
Heap memory:
1 -> 2
2 -> 3
3 -> 4
Latch Table:
1 -> 3

ID: 2
Execution Stack:
WriteHeap(v1, 10 * ReadHeap(v1))|Print(ReadHeap(v1))|countDown(cnt)|Fork(WriteHeap(v2, 10 * ReadHeap(v2))|Print(ReadHeap(v2))|countDown(cnt)|Fork(WriteHeap(v3, 10 * ReadHeap(v3))|Print(ReadHeap(v3))|countDown(cnt)))
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
File table:
Heap memory:
1 -> 2
2 -> 3
3 -> 4
Latch Table:
1 -> 3

ID: 1
Execution Stack:
Print(100)|countDown(cnt)|Print(100)
await(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
File table:
Heap memory:
1 -> 2
2 -> 3
3 -> 4
Latch Table:
1 -> 3

ID: 2
Execution Stack:
Print(ReadHeap(v1))|countDown(cnt)|Fork(WriteHeap(v2, 10 * ReadHeap(v2))|Print(ReadHeap(v2))|countDown(cnt)|Fork(WriteHeap(v3, 10 * ReadHeap(v3))|Print(ReadHeap(v3))|countDown(cnt)))
WriteHeap(v1, 10 * ReadHeap(v1))
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
File table:
Heap memory:
1 -> 2
2 -> 3
3 -> 4
Latch Table:
1 -> 3

ID: 1
Execution Stack:
Print(100)|countDown(cnt)|Print(100)
await(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
File table:
Heap memory:
1 -> 2
2 -> 3
3 -> 4
Latch Table:
1 -> 3

ID: 2
Execution Stack:
Print(ReadHeap(v1))|countDown(cnt)|Fork(WriteHeap(v2, 10 * ReadHeap(v2))|Print(ReadHeap(v2))|countDown(cnt)|Fork(WriteHeap(v3, 10 * ReadHeap(v3))|Print(ReadHeap(v3))|countDown(cnt)))
WriteHeap(v1, 10 * ReadHeap(v1))
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
File table:
Heap memory:
1 -> 2
2 -> 3
3 -> 4
Latch Table:
1 -> 3

ID: 1
Execution Stack:
Print(100)|countDown(cnt)|Print(100)
await(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
File table:
Heap memory:
1 -> 20
2 -> 3
3 -> 4
Latch Table:
1 -> 3

ID: 2
Execution Stack:
Print(ReadHeap(v1))|countDown(cnt)|Fork(WriteHeap(v2, 10 * ReadHeap(v2))|Print(ReadHeap(v2))|countDown(cnt)|Fork(WriteHeap(v3, 10 * ReadHeap(v3))|Print(ReadHeap(v3))|countDown(cnt)))
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
File table:
Heap memory:
1 -> 20
2 -> 3
3 -> 4
Latch Table:
1 -> 3

ID: 1
Execution Stack:
Print(100)|countDown(cnt)|Print(100)
await(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
File table:
Heap memory:
1 -> 20
2 -> 3
3 -> 4
Latch Table:
1 -> 3

ID: 2
Execution Stack:
Print(ReadHeap(v1))|countDown(cnt)|Fork(WriteHeap(v2, 10 * ReadHeap(v2))|Print(ReadHeap(v2))|countDown(cnt)|Fork(WriteHeap(v3, 10 * ReadHeap(v3))|Print(ReadHeap(v3))|countDown(cnt)))
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
File table:
Heap memory:
1 -> 20
2 -> 3
3 -> 4
Latch Table:
1 -> 3

ID: 1
Execution Stack:
Print(100)|countDown(cnt)|Print(100)
await(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
File table:
Heap memory:
1 -> 20
2 -> 3
3 -> 4
Latch Table:
1 -> 3

ID: 2
Execution Stack:
countDown(cnt)|Fork(WriteHeap(v2, 10 * ReadHeap(v2))|Print(ReadHeap(v2))|countDown(cnt)|Fork(WriteHeap(v3, 10 * ReadHeap(v3))|Print(ReadHeap(v3))|countDown(cnt)))
Print(ReadHeap(v1))
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
File table:
Heap memory:
1 -> 20
2 -> 3
3 -> 4
Latch Table:
1 -> 3

ID: 1
Execution Stack:
Print(100)|countDown(cnt)|Print(100)
await(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
File table:
Heap memory:
1 -> 20
2 -> 3
3 -> 4
Latch Table:
1 -> 3

ID: 2
Execution Stack:
countDown(cnt)|Fork(WriteHeap(v2, 10 * ReadHeap(v2))|Print(ReadHeap(v2))|countDown(cnt)|Fork(WriteHeap(v3, 10 * ReadHeap(v3))|Print(ReadHeap(v3))|countDown(cnt)))
Print(ReadHeap(v1))
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
File table:
Heap memory:
1 -> 20
2 -> 3
3 -> 4
Latch Table:
1 -> 3

ID: 1
Execution Stack:
Print(100)|countDown(cnt)|Print(100)
await(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
20
File table:
Heap memory:
1 -> 20
2 -> 3
3 -> 4
Latch Table:
1 -> 3

ID: 2
Execution Stack:
countDown(cnt)|Fork(WriteHeap(v2, 10 * ReadHeap(v2))|Print(ReadHeap(v2))|countDown(cnt)|Fork(WriteHeap(v3, 10 * ReadHeap(v3))|Print(ReadHeap(v3))|countDown(cnt)))
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
20
File table:
Heap memory:
1 -> 20
2 -> 3
3 -> 4
Latch Table:
1 -> 3

ID: 1
Execution Stack:
Print(100)|countDown(cnt)|Print(100)
await(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
20
File table:
Heap memory:
1 -> 20
2 -> 3
3 -> 4
Latch Table:
1 -> 3

ID: 2
Execution Stack:
countDown(cnt)|Fork(WriteHeap(v2, 10 * ReadHeap(v2))|Print(ReadHeap(v2))|countDown(cnt)|Fork(WriteHeap(v3, 10 * ReadHeap(v3))|Print(ReadHeap(v3))|countDown(cnt)))
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
20
File table:
Heap memory:
1 -> 20
2 -> 3
3 -> 4
Latch Table:
1 -> 3

ID: 1
Execution Stack:
Print(100)|countDown(cnt)|Print(100)
await(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
20
File table:
Heap memory:
1 -> 20
2 -> 3
3 -> 4
Latch Table:
1 -> 3

ID: 2
Execution Stack:
Fork(WriteHeap(v2, 10 * ReadHeap(v2))|Print(ReadHeap(v2))|countDown(cnt)|Fork(WriteHeap(v3, 10 * ReadHeap(v3))|Print(ReadHeap(v3))|countDown(cnt)))
countDown(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
20
File table:
Heap memory:
1 -> 20
2 -> 3
3 -> 4
Latch Table:
1 -> 3

ID: 1
Execution Stack:
Print(100)|countDown(cnt)|Print(100)
await(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
20
File table:
Heap memory:
1 -> 20
2 -> 3
3 -> 4
Latch Table:
1 -> 3

ID: 2
Execution Stack:
Fork(WriteHeap(v2, 10 * ReadHeap(v2))|Print(ReadHeap(v2))|countDown(cnt)|Fork(WriteHeap(v3, 10 * ReadHeap(v3))|Print(ReadHeap(v3))|countDown(cnt)))
countDown(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
20
File table:
Heap memory:
1 -> 20
2 -> 3
3 -> 4
Latch Table:
1 -> 3

ID: 1
Execution Stack:
Print(100)|countDown(cnt)|Print(100)
await(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
20
File table:
Heap memory:
1 -> 20
2 -> 3
3 -> 4
Latch Table:
1 -> 2

ID: 2
Execution Stack:
Fork(WriteHeap(v2, 10 * ReadHeap(v2))|Print(ReadHeap(v2))|countDown(cnt)|Fork(WriteHeap(v3, 10 * ReadHeap(v3))|Print(ReadHeap(v3))|countDown(cnt)))
Print(2)
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
20
File table:
Heap memory:
1 -> 20
2 -> 3
3 -> 4
Latch Table:
1 -> 2

ID: 1
Execution Stack:
Print(100)|countDown(cnt)|Print(100)
await(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
20
File table:
Heap memory:
1 -> 20
2 -> 3
3 -> 4
Latch Table:
1 -> 2

ID: 2
Execution Stack:
Fork(WriteHeap(v2, 10 * ReadHeap(v2))|Print(ReadHeap(v2))|countDown(cnt)|Fork(WriteHeap(v3, 10 * ReadHeap(v3))|Print(ReadHeap(v3))|countDown(cnt)))
Print(2)
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
20
File table:
Heap memory:
1 -> 20
2 -> 3
3 -> 4
Latch Table:
1 -> 2

ID: 1
Execution Stack:
Print(100)|countDown(cnt)|Print(100)
await(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
20
2
File table:
Heap memory:
1 -> 20
2 -> 3
3 -> 4
Latch Table:
1 -> 2

ID: 2
Execution Stack:
Fork(WriteHeap(v2, 10 * ReadHeap(v2))|Print(ReadHeap(v2))|countDown(cnt)|Fork(WriteHeap(v3, 10 * ReadHeap(v3))|Print(ReadHeap(v3))|countDown(cnt)))
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
20
2
File table:
Heap memory:
1 -> 20
2 -> 3
3 -> 4
Latch Table:
1 -> 2

ID: 1
Execution Stack:
Print(100)|countDown(cnt)|Print(100)
await(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
20
2
File table:
Heap memory:
1 -> 20
2 -> 3
3 -> 4
Latch Table:
1 -> 2

ID: 2
Execution Stack:
Fork(WriteHeap(v2, 10 * ReadHeap(v2))|Print(ReadHeap(v2))|countDown(cnt)|Fork(WriteHeap(v3, 10 * ReadHeap(v3))|Print(ReadHeap(v3))|countDown(cnt)))
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
20
2
File table:
Heap memory:
1 -> 20
2 -> 3
3 -> 4
Latch Table:
1 -> 2

ID: 1
Execution Stack:
Print(100)|countDown(cnt)|Print(100)
await(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
20
2
File table:
Heap memory:
1 -> 20
2 -> 3
3 -> 4
Latch Table:
1 -> 2

ID: 2
Execution Stack:
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
20
2
File table:
Heap memory:
1 -> 20
2 -> 3
3 -> 4
Latch Table:
1 -> 2

ID: 3
Execution Stack:
WriteHeap(v2, 10 * ReadHeap(v2))|Print(ReadHeap(v2))|countDown(cnt)|Fork(WriteHeap(v3, 10 * ReadHeap(v3))|Print(ReadHeap(v3))|countDown(cnt))
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
20
2
File table:
Heap memory:
1 -> 20
2 -> 3
3 -> 4
Latch Table:
1 -> 2

ID: 1
Execution Stack:
Print(100)|countDown(cnt)|Print(100)
await(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
20
2
File table:
Heap memory:
1 -> 20
2 -> 3
3 -> 4
Latch Table:
1 -> 2

ID: 3
Execution Stack:
WriteHeap(v2, 10 * ReadHeap(v2))|Print(ReadHeap(v2))|countDown(cnt)|Fork(WriteHeap(v3, 10 * ReadHeap(v3))|Print(ReadHeap(v3))|countDown(cnt))
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
20
2
File table:
Heap memory:
1 -> 20
2 -> 3
3 -> 4
Latch Table:
1 -> 2

ID: 1
Execution Stack:
Print(100)|countDown(cnt)|Print(100)
await(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
20
2
File table:
Heap memory:
1 -> 20
2 -> 3
3 -> 4
Latch Table:
1 -> 2

ID: 3
Execution Stack:
Print(ReadHeap(v2))|countDown(cnt)|Fork(WriteHeap(v3, 10 * ReadHeap(v3))|Print(ReadHeap(v3))|countDown(cnt))
WriteHeap(v2, 10 * ReadHeap(v2))
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
20
2
File table:
Heap memory:
1 -> 20
2 -> 3
3 -> 4
Latch Table:
1 -> 2

ID: 1
Execution Stack:
Print(100)|countDown(cnt)|Print(100)
await(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
20
2
File table:
Heap memory:
1 -> 20
2 -> 3
3 -> 4
Latch Table:
1 -> 2

ID: 3
Execution Stack:
Print(ReadHeap(v2))|countDown(cnt)|Fork(WriteHeap(v3, 10 * ReadHeap(v3))|Print(ReadHeap(v3))|countDown(cnt))
WriteHeap(v2, 10 * ReadHeap(v2))
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
20
2
File table:
Heap memory:
1 -> 20
2 -> 3
3 -> 4
Latch Table:
1 -> 2

ID: 1
Execution Stack:
Print(100)|countDown(cnt)|Print(100)
await(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
20
2
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 4
Latch Table:
1 -> 2

ID: 3
Execution Stack:
Print(ReadHeap(v2))|countDown(cnt)|Fork(WriteHeap(v3, 10 * ReadHeap(v3))|Print(ReadHeap(v3))|countDown(cnt))
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
20
2
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 4
Latch Table:
1 -> 2

ID: 1
Execution Stack:
Print(100)|countDown(cnt)|Print(100)
await(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
20
2
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 4
Latch Table:
1 -> 2

ID: 3
Execution Stack:
Print(ReadHeap(v2))|countDown(cnt)|Fork(WriteHeap(v3, 10 * ReadHeap(v3))|Print(ReadHeap(v3))|countDown(cnt))
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
20
2
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 4
Latch Table:
1 -> 2

ID: 1
Execution Stack:
Print(100)|countDown(cnt)|Print(100)
await(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
20
2
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 4
Latch Table:
1 -> 2

ID: 3
Execution Stack:
countDown(cnt)|Fork(WriteHeap(v3, 10 * ReadHeap(v3))|Print(ReadHeap(v3))|countDown(cnt))
Print(ReadHeap(v2))
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
20
2
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 4
Latch Table:
1 -> 2

ID: 1
Execution Stack:
Print(100)|countDown(cnt)|Print(100)
await(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
20
2
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 4
Latch Table:
1 -> 2

ID: 3
Execution Stack:
countDown(cnt)|Fork(WriteHeap(v3, 10 * ReadHeap(v3))|Print(ReadHeap(v3))|countDown(cnt))
Print(ReadHeap(v2))
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
20
2
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 4
Latch Table:
1 -> 2

ID: 1
Execution Stack:
Print(100)|countDown(cnt)|Print(100)
await(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
20
2
30
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 4
Latch Table:
1 -> 2

ID: 3
Execution Stack:
countDown(cnt)|Fork(WriteHeap(v3, 10 * ReadHeap(v3))|Print(ReadHeap(v3))|countDown(cnt))
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
20
2
30
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 4
Latch Table:
1 -> 2

ID: 1
Execution Stack:
Print(100)|countDown(cnt)|Print(100)
await(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
20
2
30
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 4
Latch Table:
1 -> 2

ID: 3
Execution Stack:
countDown(cnt)|Fork(WriteHeap(v3, 10 * ReadHeap(v3))|Print(ReadHeap(v3))|countDown(cnt))
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
20
2
30
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 4
Latch Table:
1 -> 2

ID: 1
Execution Stack:
Print(100)|countDown(cnt)|Print(100)
await(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
20
2
30
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 4
Latch Table:
1 -> 2

ID: 3
Execution Stack:
Fork(WriteHeap(v3, 10 * ReadHeap(v3))|Print(ReadHeap(v3))|countDown(cnt))
countDown(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
20
2
30
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 4
Latch Table:
1 -> 2

ID: 1
Execution Stack:
Print(100)|countDown(cnt)|Print(100)
await(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
20
2
30
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 4
Latch Table:
1 -> 2

ID: 3
Execution Stack:
Fork(WriteHeap(v3, 10 * ReadHeap(v3))|Print(ReadHeap(v3))|countDown(cnt))
countDown(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
20
2
30
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 4
Latch Table:
1 -> 2

ID: 1
Execution Stack:
Print(100)|countDown(cnt)|Print(100)
await(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
20
2
30
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 4
Latch Table:
1 -> 1

ID: 3
Execution Stack:
Fork(WriteHeap(v3, 10 * ReadHeap(v3))|Print(ReadHeap(v3))|countDown(cnt))
Print(3)
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
20
2
30
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 4
Latch Table:
1 -> 1

ID: 1
Execution Stack:
Print(100)|countDown(cnt)|Print(100)
await(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
20
2
30
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 4
Latch Table:
1 -> 1

ID: 3
Execution Stack:
Fork(WriteHeap(v3, 10 * ReadHeap(v3))|Print(ReadHeap(v3))|countDown(cnt))
Print(3)
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
20
2
30
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 4
Latch Table:
1 -> 1

ID: 1
Execution Stack:
Print(100)|countDown(cnt)|Print(100)
await(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
20
2
30
3
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 4
Latch Table:
1 -> 1

ID: 3
Execution Stack:
Fork(WriteHeap(v3, 10 * ReadHeap(v3))|Print(ReadHeap(v3))|countDown(cnt))
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
20
2
30
3
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 4
Latch Table:
1 -> 1

ID: 1
Execution Stack:
Print(100)|countDown(cnt)|Print(100)
await(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
20
2
30
3
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 4
Latch Table:
1 -> 1

ID: 3
Execution Stack:
Fork(WriteHeap(v3, 10 * ReadHeap(v3))|Print(ReadHeap(v3))|countDown(cnt))
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
20
2
30
3
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 4
Latch Table:
1 -> 1

ID: 1
Execution Stack:
Print(100)|countDown(cnt)|Print(100)
await(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
20
2
30
3
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 4
Latch Table:
1 -> 1

ID: 3
Execution Stack:
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
20
2
30
3
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 4
Latch Table:
1 -> 1

ID: 4
Execution Stack:
WriteHeap(v3, 10 * ReadHeap(v3))|Print(ReadHeap(v3))|countDown(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
20
2
30
3
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 4
Latch Table:
1 -> 1

ID: 1
Execution Stack:
Print(100)|countDown(cnt)|Print(100)
await(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
20
2
30
3
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 4
Latch Table:
1 -> 1

ID: 4
Execution Stack:
WriteHeap(v3, 10 * ReadHeap(v3))|Print(ReadHeap(v3))|countDown(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
20
2
30
3
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 4
Latch Table:
1 -> 1

ID: 1
Execution Stack:
Print(100)|countDown(cnt)|Print(100)
await(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
20
2
30
3
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 4
Latch Table:
1 -> 1

ID: 4
Execution Stack:
Print(ReadHeap(v3))|countDown(cnt)
WriteHeap(v3, 10 * ReadHeap(v3))
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
20
2
30
3
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 4
Latch Table:
1 -> 1

ID: 1
Execution Stack:
Print(100)|countDown(cnt)|Print(100)
await(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
20
2
30
3
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 4
Latch Table:
1 -> 1

ID: 4
Execution Stack:
Print(ReadHeap(v3))|countDown(cnt)
WriteHeap(v3, 10 * ReadHeap(v3))
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
20
2
30
3
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 4
Latch Table:
1 -> 1

ID: 1
Execution Stack:
Print(100)|countDown(cnt)|Print(100)
await(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
20
2
30
3
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 40
Latch Table:
1 -> 1

ID: 4
Execution Stack:
Print(ReadHeap(v3))|countDown(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
20
2
30
3
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 40
Latch Table:
1 -> 1

ID: 1
Execution Stack:
Print(100)|countDown(cnt)|Print(100)
await(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
20
2
30
3
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 40
Latch Table:
1 -> 1

ID: 4
Execution Stack:
Print(ReadHeap(v3))|countDown(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
20
2
30
3
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 40
Latch Table:
1 -> 1

ID: 1
Execution Stack:
Print(100)|countDown(cnt)|Print(100)
await(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
20
2
30
3
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 40
Latch Table:
1 -> 1

ID: 4
Execution Stack:
countDown(cnt)
Print(ReadHeap(v3))
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
20
2
30
3
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 40
Latch Table:
1 -> 1

ID: 1
Execution Stack:
Print(100)|countDown(cnt)|Print(100)
await(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
20
2
30
3
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 40
Latch Table:
1 -> 1

ID: 4
Execution Stack:
countDown(cnt)
Print(ReadHeap(v3))
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
20
2
30
3
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 40
Latch Table:
1 -> 1

ID: 1
Execution Stack:
Print(100)|countDown(cnt)|Print(100)
await(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
20
2
30
3
40
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 40
Latch Table:
1 -> 1

ID: 4
Execution Stack:
countDown(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
20
2
30
3
40
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 40
Latch Table:
1 -> 1

ID: 1
Execution Stack:
Print(100)|countDown(cnt)|Print(100)
await(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
20
2
30
3
40
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 40
Latch Table:
1 -> 1

ID: 4
Execution Stack:
countDown(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
20
2
30
3
40
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 40
Latch Table:
1 -> 1

ID: 1
Execution Stack:
Print(100)|countDown(cnt)|Print(100)
await(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
20
2
30
3
40
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 40
Latch Table:
1 -> 0

ID: 4
Execution Stack:
Print(4)
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
20
2
30
3
40
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 40
Latch Table:
1 -> 0

ID: 1
Execution Stack:
Print(100)|countDown(cnt)|Print(100)
await(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
20
2
30
3
40
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 40
Latch Table:
1 -> 0

ID: 4
Execution Stack:
Print(4)
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
20
2
30
3
40
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 40
Latch Table:
1 -> 0

ID: 1
Execution Stack:
Print(100)|countDown(cnt)|Print(100)
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
20
2
30
3
40
4
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 40
Latch Table:
1 -> 0

ID: 4
Execution Stack:
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
20
2
30
3
40
4
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 40
Latch Table:
1 -> 0

ID: 1
Execution Stack:
Print(100)|countDown(cnt)|Print(100)
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
20
2
30
3
40
4
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 40
Latch Table:
1 -> 0

ID: 1
Execution Stack:
countDown(cnt)|Print(100)
Print(100)
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
20
2
30
3
40
4
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 40
Latch Table:
1 -> 0

ID: 1
Execution Stack:
countDown(cnt)|Print(100)
Print(100)
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
20
2
30
3
40
4
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 40
Latch Table:
1 -> 0

ID: 1
Execution Stack:
countDown(cnt)|Print(100)
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
20
2
30
3
40
4
100
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 40
Latch Table:
1 -> 0

ID: 1
Execution Stack:
countDown(cnt)|Print(100)
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
20
2
30
3
40
4
100
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 40
Latch Table:
1 -> 0

ID: 1
Execution Stack:
Print(100)
countDown(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
20
2
30
3
40
4
100
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 40
Latch Table:
1 -> 0

ID: 1
Execution Stack:
Print(100)
countDown(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
20
2
30
3
40
4
100
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 40
Latch Table:
1 -> 0

ID: 1
Execution Stack:
Print(100)
Print(1)
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
20
2
30
3
40
4
100
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 40
Latch Table:
1 -> 0

ID: 1
Execution Stack:
Print(100)
Print(1)
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
20
2
30
3
40
4
100
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 40
Latch Table:
1 -> 0

ID: 1
Execution Stack:
Print(100)
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
20
2
30
3
40
4
100
1
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 40
Latch Table:
1 -> 0

ID: 1
Execution Stack:
Print(100)
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
20
2
30
3
40
4
100
1
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 40
Latch Table:
1 -> 0

ID: 1
Execution Stack:
SymbolTable:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list:
20
2
30
3
40
4
100
1
100
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 40
Latch Table:
1 -> 0

