ID: 1
Execution Stack:
Reference(int) v1|Reference(int) v2|int x|int q|New(v1,20)|New(v2,30)|newLock(x)|Fork(Fork(lock(x)|WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x))|lock(x)|WriteHeap(v1, 10 * ReadHeap(v1))|unlock(x))|newLock(q)|Fork(Fork(lock(q)|WriteHeap(v2, 5 + ReadHeap(v2))|unlock(q))|lock(q)|WriteHeap(v2, 10 * ReadHeap(v2))|unlock(q))|NopStatement|NopStatement|NopStatement|NopStatement|lock(x)|Print(ReadHeap(v1))|unlock(x)|lock(q)|Print(ReadHeap(v2))|unlock(q)
SymbolTable:
Output list:
File table:
Heap memory:
Lock Table:

ID: 1
Execution Stack:
Reference(int) v2|int x|int q|New(v1,20)|New(v2,30)|newLock(x)|Fork(Fork(lock(x)|WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x))|lock(x)|WriteHeap(v1, 10 * ReadHeap(v1))|unlock(x))|newLock(q)|Fork(Fork(lock(q)|WriteHeap(v2, 5 + ReadHeap(v2))|unlock(q))|lock(q)|WriteHeap(v2, 10 * ReadHeap(v2))|unlock(q))|NopStatement|NopStatement|NopStatement|NopStatement|lock(x)|Print(ReadHeap(v1))|unlock(x)|lock(q)|Print(ReadHeap(v2))|unlock(q)
Reference(int) v1
SymbolTable:
Output list:
File table:
Heap memory:
Lock Table:

ID: 1
Execution Stack:
Reference(int) v2|int x|int q|New(v1,20)|New(v2,30)|newLock(x)|Fork(Fork(lock(x)|WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x))|lock(x)|WriteHeap(v1, 10 * ReadHeap(v1))|unlock(x))|newLock(q)|Fork(Fork(lock(q)|WriteHeap(v2, 5 + ReadHeap(v2))|unlock(q))|lock(q)|WriteHeap(v2, 10 * ReadHeap(v2))|unlock(q))|NopStatement|NopStatement|NopStatement|NopStatement|lock(x)|Print(ReadHeap(v1))|unlock(x)|lock(q)|Print(ReadHeap(v2))|unlock(q)
Reference(int) v1
SymbolTable:
Output list:
File table:
Heap memory:
Lock Table:

ID: 1
Execution Stack:
Reference(int) v2|int x|int q|New(v1,20)|New(v2,30)|newLock(x)|Fork(Fork(lock(x)|WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x))|lock(x)|WriteHeap(v1, 10 * ReadHeap(v1))|unlock(x))|newLock(q)|Fork(Fork(lock(q)|WriteHeap(v2, 5 + ReadHeap(v2))|unlock(q))|lock(q)|WriteHeap(v2, 10 * ReadHeap(v2))|unlock(q))|NopStatement|NopStatement|NopStatement|NopStatement|lock(x)|Print(ReadHeap(v1))|unlock(x)|lock(q)|Print(ReadHeap(v2))|unlock(q)
SymbolTable:
v1 -> (0, int)
Output list:
File table:
Heap memory:
Lock Table:

ID: 1
Execution Stack:
Reference(int) v2|int x|int q|New(v1,20)|New(v2,30)|newLock(x)|Fork(Fork(lock(x)|WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x))|lock(x)|WriteHeap(v1, 10 * ReadHeap(v1))|unlock(x))|newLock(q)|Fork(Fork(lock(q)|WriteHeap(v2, 5 + ReadHeap(v2))|unlock(q))|lock(q)|WriteHeap(v2, 10 * ReadHeap(v2))|unlock(q))|NopStatement|NopStatement|NopStatement|NopStatement|lock(x)|Print(ReadHeap(v1))|unlock(x)|lock(q)|Print(ReadHeap(v2))|unlock(q)
SymbolTable:
v1 -> (0, int)
Output list:
File table:
Heap memory:
Lock Table:

ID: 1
Execution Stack:
int x|int q|New(v1,20)|New(v2,30)|newLock(x)|Fork(Fork(lock(x)|WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x))|lock(x)|WriteHeap(v1, 10 * ReadHeap(v1))|unlock(x))|newLock(q)|Fork(Fork(lock(q)|WriteHeap(v2, 5 + ReadHeap(v2))|unlock(q))|lock(q)|WriteHeap(v2, 10 * ReadHeap(v2))|unlock(q))|NopStatement|NopStatement|NopStatement|NopStatement|lock(x)|Print(ReadHeap(v1))|unlock(x)|lock(q)|Print(ReadHeap(v2))|unlock(q)
Reference(int) v2
SymbolTable:
v1 -> (0, int)
Output list:
File table:
Heap memory:
Lock Table:

ID: 1
Execution Stack:
int x|int q|New(v1,20)|New(v2,30)|newLock(x)|Fork(Fork(lock(x)|WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x))|lock(x)|WriteHeap(v1, 10 * ReadHeap(v1))|unlock(x))|newLock(q)|Fork(Fork(lock(q)|WriteHeap(v2, 5 + ReadHeap(v2))|unlock(q))|lock(q)|WriteHeap(v2, 10 * ReadHeap(v2))|unlock(q))|NopStatement|NopStatement|NopStatement|NopStatement|lock(x)|Print(ReadHeap(v1))|unlock(x)|lock(q)|Print(ReadHeap(v2))|unlock(q)
Reference(int) v2
SymbolTable:
v1 -> (0, int)
Output list:
File table:
Heap memory:
Lock Table:

ID: 1
Execution Stack:
int x|int q|New(v1,20)|New(v2,30)|newLock(x)|Fork(Fork(lock(x)|WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x))|lock(x)|WriteHeap(v1, 10 * ReadHeap(v1))|unlock(x))|newLock(q)|Fork(Fork(lock(q)|WriteHeap(v2, 5 + ReadHeap(v2))|unlock(q))|lock(q)|WriteHeap(v2, 10 * ReadHeap(v2))|unlock(q))|NopStatement|NopStatement|NopStatement|NopStatement|lock(x)|Print(ReadHeap(v1))|unlock(x)|lock(q)|Print(ReadHeap(v2))|unlock(q)
SymbolTable:
v1 -> (0, int)
v2 -> (0, int)
Output list:
File table:
Heap memory:
Lock Table:

ID: 1
Execution Stack:
int x|int q|New(v1,20)|New(v2,30)|newLock(x)|Fork(Fork(lock(x)|WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x))|lock(x)|WriteHeap(v1, 10 * ReadHeap(v1))|unlock(x))|newLock(q)|Fork(Fork(lock(q)|WriteHeap(v2, 5 + ReadHeap(v2))|unlock(q))|lock(q)|WriteHeap(v2, 10 * ReadHeap(v2))|unlock(q))|NopStatement|NopStatement|NopStatement|NopStatement|lock(x)|Print(ReadHeap(v1))|unlock(x)|lock(q)|Print(ReadHeap(v2))|unlock(q)
SymbolTable:
v1 -> (0, int)
v2 -> (0, int)
Output list:
File table:
Heap memory:
Lock Table:

ID: 1
Execution Stack:
int q|New(v1,20)|New(v2,30)|newLock(x)|Fork(Fork(lock(x)|WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x))|lock(x)|WriteHeap(v1, 10 * ReadHeap(v1))|unlock(x))|newLock(q)|Fork(Fork(lock(q)|WriteHeap(v2, 5 + ReadHeap(v2))|unlock(q))|lock(q)|WriteHeap(v2, 10 * ReadHeap(v2))|unlock(q))|NopStatement|NopStatement|NopStatement|NopStatement|lock(x)|Print(ReadHeap(v1))|unlock(x)|lock(q)|Print(ReadHeap(v2))|unlock(q)
int x
SymbolTable:
v1 -> (0, int)
v2 -> (0, int)
Output list:
File table:
Heap memory:
Lock Table:

ID: 1
Execution Stack:
int q|New(v1,20)|New(v2,30)|newLock(x)|Fork(Fork(lock(x)|WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x))|lock(x)|WriteHeap(v1, 10 * ReadHeap(v1))|unlock(x))|newLock(q)|Fork(Fork(lock(q)|WriteHeap(v2, 5 + ReadHeap(v2))|unlock(q))|lock(q)|WriteHeap(v2, 10 * ReadHeap(v2))|unlock(q))|NopStatement|NopStatement|NopStatement|NopStatement|lock(x)|Print(ReadHeap(v1))|unlock(x)|lock(q)|Print(ReadHeap(v2))|unlock(q)
int x
SymbolTable:
v1 -> (0, int)
v2 -> (0, int)
Output list:
File table:
Heap memory:
Lock Table:

ID: 1
Execution Stack:
int q|New(v1,20)|New(v2,30)|newLock(x)|Fork(Fork(lock(x)|WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x))|lock(x)|WriteHeap(v1, 10 * ReadHeap(v1))|unlock(x))|newLock(q)|Fork(Fork(lock(q)|WriteHeap(v2, 5 + ReadHeap(v2))|unlock(q))|lock(q)|WriteHeap(v2, 10 * ReadHeap(v2))|unlock(q))|NopStatement|NopStatement|NopStatement|NopStatement|lock(x)|Print(ReadHeap(v1))|unlock(x)|lock(q)|Print(ReadHeap(v2))|unlock(q)
SymbolTable:
x -> 0
v1 -> (0, int)
v2 -> (0, int)
Output list:
File table:
Heap memory:
Lock Table:

ID: 1
Execution Stack:
int q|New(v1,20)|New(v2,30)|newLock(x)|Fork(Fork(lock(x)|WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x))|lock(x)|WriteHeap(v1, 10 * ReadHeap(v1))|unlock(x))|newLock(q)|Fork(Fork(lock(q)|WriteHeap(v2, 5 + ReadHeap(v2))|unlock(q))|lock(q)|WriteHeap(v2, 10 * ReadHeap(v2))|unlock(q))|NopStatement|NopStatement|NopStatement|NopStatement|lock(x)|Print(ReadHeap(v1))|unlock(x)|lock(q)|Print(ReadHeap(v2))|unlock(q)
SymbolTable:
x -> 0
v1 -> (0, int)
v2 -> (0, int)
Output list:
File table:
Heap memory:
Lock Table:

ID: 1
Execution Stack:
New(v1,20)|New(v2,30)|newLock(x)|Fork(Fork(lock(x)|WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x))|lock(x)|WriteHeap(v1, 10 * ReadHeap(v1))|unlock(x))|newLock(q)|Fork(Fork(lock(q)|WriteHeap(v2, 5 + ReadHeap(v2))|unlock(q))|lock(q)|WriteHeap(v2, 10 * ReadHeap(v2))|unlock(q))|NopStatement|NopStatement|NopStatement|NopStatement|lock(x)|Print(ReadHeap(v1))|unlock(x)|lock(q)|Print(ReadHeap(v2))|unlock(q)
int q
SymbolTable:
x -> 0
v1 -> (0, int)
v2 -> (0, int)
Output list:
File table:
Heap memory:
Lock Table:

ID: 1
Execution Stack:
New(v1,20)|New(v2,30)|newLock(x)|Fork(Fork(lock(x)|WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x))|lock(x)|WriteHeap(v1, 10 * ReadHeap(v1))|unlock(x))|newLock(q)|Fork(Fork(lock(q)|WriteHeap(v2, 5 + ReadHeap(v2))|unlock(q))|lock(q)|WriteHeap(v2, 10 * ReadHeap(v2))|unlock(q))|NopStatement|NopStatement|NopStatement|NopStatement|lock(x)|Print(ReadHeap(v1))|unlock(x)|lock(q)|Print(ReadHeap(v2))|unlock(q)
int q
SymbolTable:
x -> 0
v1 -> (0, int)
v2 -> (0, int)
Output list:
File table:
Heap memory:
Lock Table:

ID: 1
Execution Stack:
New(v1,20)|New(v2,30)|newLock(x)|Fork(Fork(lock(x)|WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x))|lock(x)|WriteHeap(v1, 10 * ReadHeap(v1))|unlock(x))|newLock(q)|Fork(Fork(lock(q)|WriteHeap(v2, 5 + ReadHeap(v2))|unlock(q))|lock(q)|WriteHeap(v2, 10 * ReadHeap(v2))|unlock(q))|NopStatement|NopStatement|NopStatement|NopStatement|lock(x)|Print(ReadHeap(v1))|unlock(x)|lock(q)|Print(ReadHeap(v2))|unlock(q)
SymbolTable:
q -> 0
x -> 0
v1 -> (0, int)
v2 -> (0, int)
Output list:
File table:
Heap memory:
Lock Table:

ID: 1
Execution Stack:
New(v1,20)|New(v2,30)|newLock(x)|Fork(Fork(lock(x)|WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x))|lock(x)|WriteHeap(v1, 10 * ReadHeap(v1))|unlock(x))|newLock(q)|Fork(Fork(lock(q)|WriteHeap(v2, 5 + ReadHeap(v2))|unlock(q))|lock(q)|WriteHeap(v2, 10 * ReadHeap(v2))|unlock(q))|NopStatement|NopStatement|NopStatement|NopStatement|lock(x)|Print(ReadHeap(v1))|unlock(x)|lock(q)|Print(ReadHeap(v2))|unlock(q)
SymbolTable:
q -> 0
x -> 0
v1 -> (0, int)
v2 -> (0, int)
Output list:
File table:
Heap memory:
Lock Table:

ID: 1
Execution Stack:
New(v2,30)|newLock(x)|Fork(Fork(lock(x)|WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x))|lock(x)|WriteHeap(v1, 10 * ReadHeap(v1))|unlock(x))|newLock(q)|Fork(Fork(lock(q)|WriteHeap(v2, 5 + ReadHeap(v2))|unlock(q))|lock(q)|WriteHeap(v2, 10 * ReadHeap(v2))|unlock(q))|NopStatement|NopStatement|NopStatement|NopStatement|lock(x)|Print(ReadHeap(v1))|unlock(x)|lock(q)|Print(ReadHeap(v2))|unlock(q)
New(v1,20)
SymbolTable:
q -> 0
x -> 0
v1 -> (0, int)
v2 -> (0, int)
Output list:
File table:
Heap memory:
Lock Table:

ID: 1
Execution Stack:
New(v2,30)|newLock(x)|Fork(Fork(lock(x)|WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x))|lock(x)|WriteHeap(v1, 10 * ReadHeap(v1))|unlock(x))|newLock(q)|Fork(Fork(lock(q)|WriteHeap(v2, 5 + ReadHeap(v2))|unlock(q))|lock(q)|WriteHeap(v2, 10 * ReadHeap(v2))|unlock(q))|NopStatement|NopStatement|NopStatement|NopStatement|lock(x)|Print(ReadHeap(v1))|unlock(x)|lock(q)|Print(ReadHeap(v2))|unlock(q)
New(v1,20)
SymbolTable:
q -> 0
x -> 0
v1 -> (0, int)
v2 -> (0, int)
Output list:
File table:
Heap memory:
Lock Table:

ID: 1
Execution Stack:
New(v2,30)|newLock(x)|Fork(Fork(lock(x)|WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x))|lock(x)|WriteHeap(v1, 10 * ReadHeap(v1))|unlock(x))|newLock(q)|Fork(Fork(lock(q)|WriteHeap(v2, 5 + ReadHeap(v2))|unlock(q))|lock(q)|WriteHeap(v2, 10 * ReadHeap(v2))|unlock(q))|NopStatement|NopStatement|NopStatement|NopStatement|lock(x)|Print(ReadHeap(v1))|unlock(x)|lock(q)|Print(ReadHeap(v2))|unlock(q)
SymbolTable:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (0, int)
Output list:
File table:
Heap memory:
1 -> 20
Lock Table:

ID: 1
Execution Stack:
New(v2,30)|newLock(x)|Fork(Fork(lock(x)|WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x))|lock(x)|WriteHeap(v1, 10 * ReadHeap(v1))|unlock(x))|newLock(q)|Fork(Fork(lock(q)|WriteHeap(v2, 5 + ReadHeap(v2))|unlock(q))|lock(q)|WriteHeap(v2, 10 * ReadHeap(v2))|unlock(q))|NopStatement|NopStatement|NopStatement|NopStatement|lock(x)|Print(ReadHeap(v1))|unlock(x)|lock(q)|Print(ReadHeap(v2))|unlock(q)
SymbolTable:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (0, int)
Output list:
File table:
Heap memory:
1 -> 20
Lock Table:

ID: 1
Execution Stack:
newLock(x)|Fork(Fork(lock(x)|WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x))|lock(x)|WriteHeap(v1, 10 * ReadHeap(v1))|unlock(x))|newLock(q)|Fork(Fork(lock(q)|WriteHeap(v2, 5 + ReadHeap(v2))|unlock(q))|lock(q)|WriteHeap(v2, 10 * ReadHeap(v2))|unlock(q))|NopStatement|NopStatement|NopStatement|NopStatement|lock(x)|Print(ReadHeap(v1))|unlock(x)|lock(q)|Print(ReadHeap(v2))|unlock(q)
New(v2,30)
SymbolTable:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (0, int)
Output list:
File table:
Heap memory:
1 -> 20
Lock Table:

ID: 1
Execution Stack:
newLock(x)|Fork(Fork(lock(x)|WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x))|lock(x)|WriteHeap(v1, 10 * ReadHeap(v1))|unlock(x))|newLock(q)|Fork(Fork(lock(q)|WriteHeap(v2, 5 + ReadHeap(v2))|unlock(q))|lock(q)|WriteHeap(v2, 10 * ReadHeap(v2))|unlock(q))|NopStatement|NopStatement|NopStatement|NopStatement|lock(x)|Print(ReadHeap(v1))|unlock(x)|lock(q)|Print(ReadHeap(v2))|unlock(q)
New(v2,30)
SymbolTable:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (0, int)
Output list:
File table:
Heap memory:
1 -> 20
Lock Table:

ID: 1
Execution Stack:
newLock(x)|Fork(Fork(lock(x)|WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x))|lock(x)|WriteHeap(v1, 10 * ReadHeap(v1))|unlock(x))|newLock(q)|Fork(Fork(lock(q)|WriteHeap(v2, 5 + ReadHeap(v2))|unlock(q))|lock(q)|WriteHeap(v2, 10 * ReadHeap(v2))|unlock(q))|NopStatement|NopStatement|NopStatement|NopStatement|lock(x)|Print(ReadHeap(v1))|unlock(x)|lock(q)|Print(ReadHeap(v2))|unlock(q)
SymbolTable:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 20
2 -> 30
Lock Table:

ID: 1
Execution Stack:
newLock(x)|Fork(Fork(lock(x)|WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x))|lock(x)|WriteHeap(v1, 10 * ReadHeap(v1))|unlock(x))|newLock(q)|Fork(Fork(lock(q)|WriteHeap(v2, 5 + ReadHeap(v2))|unlock(q))|lock(q)|WriteHeap(v2, 10 * ReadHeap(v2))|unlock(q))|NopStatement|NopStatement|NopStatement|NopStatement|lock(x)|Print(ReadHeap(v1))|unlock(x)|lock(q)|Print(ReadHeap(v2))|unlock(q)
SymbolTable:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 20
2 -> 30
Lock Table:

ID: 1
Execution Stack:
Fork(Fork(lock(x)|WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x))|lock(x)|WriteHeap(v1, 10 * ReadHeap(v1))|unlock(x))|newLock(q)|Fork(Fork(lock(q)|WriteHeap(v2, 5 + ReadHeap(v2))|unlock(q))|lock(q)|WriteHeap(v2, 10 * ReadHeap(v2))|unlock(q))|NopStatement|NopStatement|NopStatement|NopStatement|lock(x)|Print(ReadHeap(v1))|unlock(x)|lock(q)|Print(ReadHeap(v2))|unlock(q)
newLock(x)
SymbolTable:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 20
2 -> 30
Lock Table:

ID: 1
Execution Stack:
Fork(Fork(lock(x)|WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x))|lock(x)|WriteHeap(v1, 10 * ReadHeap(v1))|unlock(x))|newLock(q)|Fork(Fork(lock(q)|WriteHeap(v2, 5 + ReadHeap(v2))|unlock(q))|lock(q)|WriteHeap(v2, 10 * ReadHeap(v2))|unlock(q))|NopStatement|NopStatement|NopStatement|NopStatement|lock(x)|Print(ReadHeap(v1))|unlock(x)|lock(q)|Print(ReadHeap(v2))|unlock(q)
newLock(x)
SymbolTable:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 20
2 -> 30
Lock Table:

ID: 1
Execution Stack:
Fork(Fork(lock(x)|WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x))|lock(x)|WriteHeap(v1, 10 * ReadHeap(v1))|unlock(x))|newLock(q)|Fork(Fork(lock(q)|WriteHeap(v2, 5 + ReadHeap(v2))|unlock(q))|lock(q)|WriteHeap(v2, 10 * ReadHeap(v2))|unlock(q))|NopStatement|NopStatement|NopStatement|NopStatement|lock(x)|Print(ReadHeap(v1))|unlock(x)|lock(q)|Print(ReadHeap(v2))|unlock(q)
SymbolTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 20
2 -> 30
Lock Table:
1 -> -1

ID: 1
Execution Stack:
Fork(Fork(lock(x)|WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x))|lock(x)|WriteHeap(v1, 10 * ReadHeap(v1))|unlock(x))|newLock(q)|Fork(Fork(lock(q)|WriteHeap(v2, 5 + ReadHeap(v2))|unlock(q))|lock(q)|WriteHeap(v2, 10 * ReadHeap(v2))|unlock(q))|NopStatement|NopStatement|NopStatement|NopStatement|lock(x)|Print(ReadHeap(v1))|unlock(x)|lock(q)|Print(ReadHeap(v2))|unlock(q)
SymbolTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 20
2 -> 30
Lock Table:
1 -> -1

ID: 1
Execution Stack:
newLock(q)|Fork(Fork(lock(q)|WriteHeap(v2, 5 + ReadHeap(v2))|unlock(q))|lock(q)|WriteHeap(v2, 10 * ReadHeap(v2))|unlock(q))|NopStatement|NopStatement|NopStatement|NopStatement|lock(x)|Print(ReadHeap(v1))|unlock(x)|lock(q)|Print(ReadHeap(v2))|unlock(q)
Fork(Fork(lock(x)|WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x))|lock(x)|WriteHeap(v1, 10 * ReadHeap(v1))|unlock(x))
SymbolTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 20
2 -> 30
Lock Table:
1 -> -1

ID: 1
Execution Stack:
newLock(q)|Fork(Fork(lock(q)|WriteHeap(v2, 5 + ReadHeap(v2))|unlock(q))|lock(q)|WriteHeap(v2, 10 * ReadHeap(v2))|unlock(q))|NopStatement|NopStatement|NopStatement|NopStatement|lock(x)|Print(ReadHeap(v1))|unlock(x)|lock(q)|Print(ReadHeap(v2))|unlock(q)
Fork(Fork(lock(x)|WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x))|lock(x)|WriteHeap(v1, 10 * ReadHeap(v1))|unlock(x))
SymbolTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 20
2 -> 30
Lock Table:
1 -> -1

ID: 1
Execution Stack:
newLock(q)|Fork(Fork(lock(q)|WriteHeap(v2, 5 + ReadHeap(v2))|unlock(q))|lock(q)|WriteHeap(v2, 10 * ReadHeap(v2))|unlock(q))|NopStatement|NopStatement|NopStatement|NopStatement|lock(x)|Print(ReadHeap(v1))|unlock(x)|lock(q)|Print(ReadHeap(v2))|unlock(q)
SymbolTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 20
2 -> 30
Lock Table:
1 -> -1

ID: 2
Execution Stack:
Fork(lock(x)|WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x))|lock(x)|WriteHeap(v1, 10 * ReadHeap(v1))|unlock(x)
SymbolTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 20
2 -> 30
Lock Table:
1 -> -1

ID: 1
Execution Stack:
newLock(q)|Fork(Fork(lock(q)|WriteHeap(v2, 5 + ReadHeap(v2))|unlock(q))|lock(q)|WriteHeap(v2, 10 * ReadHeap(v2))|unlock(q))|NopStatement|NopStatement|NopStatement|NopStatement|lock(x)|Print(ReadHeap(v1))|unlock(x)|lock(q)|Print(ReadHeap(v2))|unlock(q)
SymbolTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 20
2 -> 30
Lock Table:
1 -> -1

ID: 2
Execution Stack:
Fork(lock(x)|WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x))|lock(x)|WriteHeap(v1, 10 * ReadHeap(v1))|unlock(x)
SymbolTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 20
2 -> 30
Lock Table:
1 -> -1

ID: 1
Execution Stack:
Fork(Fork(lock(q)|WriteHeap(v2, 5 + ReadHeap(v2))|unlock(q))|lock(q)|WriteHeap(v2, 10 * ReadHeap(v2))|unlock(q))|NopStatement|NopStatement|NopStatement|NopStatement|lock(x)|Print(ReadHeap(v1))|unlock(x)|lock(q)|Print(ReadHeap(v2))|unlock(q)
newLock(q)
SymbolTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 20
2 -> 30
Lock Table:
1 -> -1

ID: 2
Execution Stack:
lock(x)|WriteHeap(v1, 10 * ReadHeap(v1))|unlock(x)
Fork(lock(x)|WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x))
SymbolTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 20
2 -> 30
Lock Table:
1 -> -1

ID: 1
Execution Stack:
Fork(Fork(lock(q)|WriteHeap(v2, 5 + ReadHeap(v2))|unlock(q))|lock(q)|WriteHeap(v2, 10 * ReadHeap(v2))|unlock(q))|NopStatement|NopStatement|NopStatement|NopStatement|lock(x)|Print(ReadHeap(v1))|unlock(x)|lock(q)|Print(ReadHeap(v2))|unlock(q)
newLock(q)
SymbolTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 20
2 -> 30
Lock Table:
1 -> -1

ID: 2
Execution Stack:
lock(x)|WriteHeap(v1, 10 * ReadHeap(v1))|unlock(x)
Fork(lock(x)|WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x))
SymbolTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 20
2 -> 30
Lock Table:
1 -> -1

ID: 1
Execution Stack:
Fork(Fork(lock(q)|WriteHeap(v2, 5 + ReadHeap(v2))|unlock(q))|lock(q)|WriteHeap(v2, 10 * ReadHeap(v2))|unlock(q))|NopStatement|NopStatement|NopStatement|NopStatement|lock(x)|Print(ReadHeap(v1))|unlock(x)|lock(q)|Print(ReadHeap(v2))|unlock(q)
SymbolTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 20
2 -> 30
Lock Table:
1 -> -1
2 -> -1

ID: 2
Execution Stack:
lock(x)|WriteHeap(v1, 10 * ReadHeap(v1))|unlock(x)
SymbolTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 20
2 -> 30
Lock Table:
1 -> -1
2 -> -1

ID: 3
Execution Stack:
lock(x)|WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x)
SymbolTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 20
2 -> 30
Lock Table:
1 -> -1
2 -> -1

ID: 1
Execution Stack:
Fork(Fork(lock(q)|WriteHeap(v2, 5 + ReadHeap(v2))|unlock(q))|lock(q)|WriteHeap(v2, 10 * ReadHeap(v2))|unlock(q))|NopStatement|NopStatement|NopStatement|NopStatement|lock(x)|Print(ReadHeap(v1))|unlock(x)|lock(q)|Print(ReadHeap(v2))|unlock(q)
SymbolTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 20
2 -> 30
Lock Table:
1 -> -1
2 -> -1

ID: 2
Execution Stack:
lock(x)|WriteHeap(v1, 10 * ReadHeap(v1))|unlock(x)
SymbolTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 20
2 -> 30
Lock Table:
1 -> -1
2 -> -1

ID: 3
Execution Stack:
lock(x)|WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x)
SymbolTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 20
2 -> 30
Lock Table:
1 -> -1
2 -> -1

ID: 1
Execution Stack:
NopStatement|NopStatement|NopStatement|NopStatement|lock(x)|Print(ReadHeap(v1))|unlock(x)|lock(q)|Print(ReadHeap(v2))|unlock(q)
Fork(Fork(lock(q)|WriteHeap(v2, 5 + ReadHeap(v2))|unlock(q))|lock(q)|WriteHeap(v2, 10 * ReadHeap(v2))|unlock(q))
SymbolTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 20
2 -> 30
Lock Table:
1 -> -1
2 -> -1

ID: 2
Execution Stack:
WriteHeap(v1, 10 * ReadHeap(v1))|unlock(x)
lock(x)
SymbolTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 20
2 -> 30
Lock Table:
1 -> -1
2 -> -1

ID: 3
Execution Stack:
WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x)
lock(x)
SymbolTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 20
2 -> 30
Lock Table:
1 -> -1
2 -> -1

ID: 1
Execution Stack:
NopStatement|NopStatement|NopStatement|NopStatement|lock(x)|Print(ReadHeap(v1))|unlock(x)|lock(q)|Print(ReadHeap(v2))|unlock(q)
Fork(Fork(lock(q)|WriteHeap(v2, 5 + ReadHeap(v2))|unlock(q))|lock(q)|WriteHeap(v2, 10 * ReadHeap(v2))|unlock(q))
SymbolTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 20
2 -> 30
Lock Table:
1 -> -1
2 -> -1

ID: 2
Execution Stack:
WriteHeap(v1, 10 * ReadHeap(v1))|unlock(x)
lock(x)
SymbolTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 20
2 -> 30
Lock Table:
1 -> -1
2 -> -1

ID: 3
Execution Stack:
WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x)
lock(x)
SymbolTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 20
2 -> 30
Lock Table:
1 -> -1
2 -> -1

ID: 1
Execution Stack:
NopStatement|NopStatement|NopStatement|NopStatement|lock(x)|Print(ReadHeap(v1))|unlock(x)|lock(q)|Print(ReadHeap(v2))|unlock(q)
SymbolTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 20
2 -> 30
Lock Table:
1 -> 2
2 -> -1

ID: 2
Execution Stack:
WriteHeap(v1, 10 * ReadHeap(v1))|unlock(x)
SymbolTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 20
2 -> 30
Lock Table:
1 -> 2
2 -> -1

ID: 3
Execution Stack:
WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x)
lock(x)
SymbolTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 20
2 -> 30
Lock Table:
1 -> 2
2 -> -1

ID: 4
Execution Stack:
Fork(lock(q)|WriteHeap(v2, 5 + ReadHeap(v2))|unlock(q))|lock(q)|WriteHeap(v2, 10 * ReadHeap(v2))|unlock(q)
SymbolTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 20
2 -> 30
Lock Table:
1 -> 2
2 -> -1

ID: 1
Execution Stack:
NopStatement|NopStatement|NopStatement|NopStatement|lock(x)|Print(ReadHeap(v1))|unlock(x)|lock(q)|Print(ReadHeap(v2))|unlock(q)
SymbolTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 20
2 -> 30
Lock Table:
1 -> 2
2 -> -1

ID: 2
Execution Stack:
WriteHeap(v1, 10 * ReadHeap(v1))|unlock(x)
SymbolTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 20
2 -> 30
Lock Table:
1 -> 2
2 -> -1

ID: 3
Execution Stack:
WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x)
lock(x)
SymbolTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 20
2 -> 30
Lock Table:
1 -> 2
2 -> -1

ID: 4
Execution Stack:
Fork(lock(q)|WriteHeap(v2, 5 + ReadHeap(v2))|unlock(q))|lock(q)|WriteHeap(v2, 10 * ReadHeap(v2))|unlock(q)
SymbolTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 20
2 -> 30
Lock Table:
1 -> 2
2 -> -1

ID: 1
Execution Stack:
NopStatement|NopStatement|NopStatement|lock(x)|Print(ReadHeap(v1))|unlock(x)|lock(q)|Print(ReadHeap(v2))|unlock(q)
NopStatement
SymbolTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 20
2 -> 30
Lock Table:
1 -> 2
2 -> -1

ID: 2
Execution Stack:
unlock(x)
WriteHeap(v1, 10 * ReadHeap(v1))
SymbolTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 20
2 -> 30
Lock Table:
1 -> 2
2 -> -1

ID: 3
Execution Stack:
WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x)
lock(x)
SymbolTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 20
2 -> 30
Lock Table:
1 -> 2
2 -> -1

ID: 4
Execution Stack:
lock(q)|WriteHeap(v2, 10 * ReadHeap(v2))|unlock(q)
Fork(lock(q)|WriteHeap(v2, 5 + ReadHeap(v2))|unlock(q))
SymbolTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 20
2 -> 30
Lock Table:
1 -> 2
2 -> -1

ID: 1
Execution Stack:
NopStatement|NopStatement|NopStatement|lock(x)|Print(ReadHeap(v1))|unlock(x)|lock(q)|Print(ReadHeap(v2))|unlock(q)
NopStatement
SymbolTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 20
2 -> 30
Lock Table:
1 -> 2
2 -> -1

ID: 2
Execution Stack:
unlock(x)
WriteHeap(v1, 10 * ReadHeap(v1))
SymbolTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 20
2 -> 30
Lock Table:
1 -> 2
2 -> -1

ID: 3
Execution Stack:
WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x)
lock(x)
SymbolTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 20
2 -> 30
Lock Table:
1 -> 2
2 -> -1

ID: 4
Execution Stack:
lock(q)|WriteHeap(v2, 10 * ReadHeap(v2))|unlock(q)
Fork(lock(q)|WriteHeap(v2, 5 + ReadHeap(v2))|unlock(q))
SymbolTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 20
2 -> 30
Lock Table:
1 -> 2
2 -> -1

ID: 1
Execution Stack:
NopStatement|NopStatement|NopStatement|lock(x)|Print(ReadHeap(v1))|unlock(x)|lock(q)|Print(ReadHeap(v2))|unlock(q)
SymbolTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 200
2 -> 30
Lock Table:
1 -> 2
2 -> -1

ID: 2
Execution Stack:
unlock(x)
SymbolTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 200
2 -> 30
Lock Table:
1 -> 2
2 -> -1

ID: 3
Execution Stack:
WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x)
lock(x)
SymbolTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 200
2 -> 30
Lock Table:
1 -> 2
2 -> -1

ID: 4
Execution Stack:
lock(q)|WriteHeap(v2, 10 * ReadHeap(v2))|unlock(q)
SymbolTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 200
2 -> 30
Lock Table:
1 -> 2
2 -> -1

ID: 5
Execution Stack:
lock(q)|WriteHeap(v2, 5 + ReadHeap(v2))|unlock(q)
SymbolTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 200
2 -> 30
Lock Table:
1 -> 2
2 -> -1

ID: 1
Execution Stack:
NopStatement|NopStatement|NopStatement|lock(x)|Print(ReadHeap(v1))|unlock(x)|lock(q)|Print(ReadHeap(v2))|unlock(q)
SymbolTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 200
2 -> 30
Lock Table:
1 -> 2
2 -> -1

ID: 2
Execution Stack:
unlock(x)
SymbolTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 200
2 -> 30
Lock Table:
1 -> 2
2 -> -1

ID: 3
Execution Stack:
WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x)
lock(x)
SymbolTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 200
2 -> 30
Lock Table:
1 -> 2
2 -> -1

ID: 4
Execution Stack:
lock(q)|WriteHeap(v2, 10 * ReadHeap(v2))|unlock(q)
SymbolTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 200
2 -> 30
Lock Table:
1 -> 2
2 -> -1

ID: 5
Execution Stack:
lock(q)|WriteHeap(v2, 5 + ReadHeap(v2))|unlock(q)
SymbolTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 200
2 -> 30
Lock Table:
1 -> 2
2 -> -1

ID: 1
Execution Stack:
NopStatement|NopStatement|lock(x)|Print(ReadHeap(v1))|unlock(x)|lock(q)|Print(ReadHeap(v2))|unlock(q)
NopStatement
SymbolTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 200
2 -> 30
Lock Table:
1 -> -1
2 -> -1

ID: 2
Execution Stack:
SymbolTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 200
2 -> 30
Lock Table:
1 -> -1
2 -> -1

ID: 3
Execution Stack:
WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x)
lock(x)
SymbolTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 200
2 -> 30
Lock Table:
1 -> -1
2 -> -1

ID: 4
Execution Stack:
WriteHeap(v2, 10 * ReadHeap(v2))|unlock(q)
lock(q)
SymbolTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 200
2 -> 30
Lock Table:
1 -> -1
2 -> -1

ID: 5
Execution Stack:
WriteHeap(v2, 5 + ReadHeap(v2))|unlock(q)
lock(q)
SymbolTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 200
2 -> 30
Lock Table:
1 -> -1
2 -> -1

ID: 1
Execution Stack:
NopStatement|NopStatement|lock(x)|Print(ReadHeap(v1))|unlock(x)|lock(q)|Print(ReadHeap(v2))|unlock(q)
NopStatement
SymbolTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 200
2 -> 30
Lock Table:
1 -> -1
2 -> -1

ID: 3
Execution Stack:
WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x)
lock(x)
SymbolTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 200
2 -> 30
Lock Table:
1 -> -1
2 -> -1

ID: 4
Execution Stack:
WriteHeap(v2, 10 * ReadHeap(v2))|unlock(q)
lock(q)
SymbolTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 200
2 -> 30
Lock Table:
1 -> -1
2 -> -1

ID: 5
Execution Stack:
WriteHeap(v2, 5 + ReadHeap(v2))|unlock(q)
lock(q)
SymbolTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 200
2 -> 30
Lock Table:
1 -> -1
2 -> -1

ID: 1
Execution Stack:
NopStatement|NopStatement|lock(x)|Print(ReadHeap(v1))|unlock(x)|lock(q)|Print(ReadHeap(v2))|unlock(q)
SymbolTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 200
2 -> 30
Lock Table:
1 -> 3
2 -> 4

ID: 3
Execution Stack:
WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x)
SymbolTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 200
2 -> 30
Lock Table:
1 -> 3
2 -> 4

ID: 4
Execution Stack:
WriteHeap(v2, 10 * ReadHeap(v2))|unlock(q)
SymbolTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 200
2 -> 30
Lock Table:
1 -> 3
2 -> 4

ID: 5
Execution Stack:
WriteHeap(v2, 5 + ReadHeap(v2))|unlock(q)
lock(q)
SymbolTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 200
2 -> 30
Lock Table:
1 -> 3
2 -> 4

ID: 1
Execution Stack:
NopStatement|NopStatement|lock(x)|Print(ReadHeap(v1))|unlock(x)|lock(q)|Print(ReadHeap(v2))|unlock(q)
SymbolTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 200
2 -> 30
Lock Table:
1 -> 3
2 -> 4

ID: 3
Execution Stack:
WriteHeap(v1, ReadHeap(v1) - 1)|unlock(x)
SymbolTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 200
2 -> 30
Lock Table:
1 -> 3
2 -> 4

ID: 4
Execution Stack:
WriteHeap(v2, 10 * ReadHeap(v2))|unlock(q)
SymbolTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 200
2 -> 30
Lock Table:
1 -> 3
2 -> 4

ID: 5
Execution Stack:
WriteHeap(v2, 5 + ReadHeap(v2))|unlock(q)
lock(q)
SymbolTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 200
2 -> 30
Lock Table:
1 -> 3
2 -> 4

ID: 1
Execution Stack:
NopStatement|lock(x)|Print(ReadHeap(v1))|unlock(x)|lock(q)|Print(ReadHeap(v2))|unlock(q)
NopStatement
SymbolTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 200
2 -> 30
Lock Table:
1 -> 3
2 -> 4

ID: 3
Execution Stack:
unlock(x)
WriteHeap(v1, ReadHeap(v1) - 1)
SymbolTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 200
2 -> 30
Lock Table:
1 -> 3
2 -> 4

ID: 4
Execution Stack:
unlock(q)
WriteHeap(v2, 10 * ReadHeap(v2))
SymbolTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 200
2 -> 30
Lock Table:
1 -> 3
2 -> 4

ID: 5
Execution Stack:
WriteHeap(v2, 5 + ReadHeap(v2))|unlock(q)
lock(q)
SymbolTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 200
2 -> 30
Lock Table:
1 -> 3
2 -> 4

ID: 1
Execution Stack:
NopStatement|lock(x)|Print(ReadHeap(v1))|unlock(x)|lock(q)|Print(ReadHeap(v2))|unlock(q)
NopStatement
SymbolTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 200
2 -> 30
Lock Table:
1 -> 3
2 -> 4

ID: 3
Execution Stack:
unlock(x)
WriteHeap(v1, ReadHeap(v1) - 1)
SymbolTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 200
2 -> 30
Lock Table:
1 -> 3
2 -> 4

ID: 4
Execution Stack:
unlock(q)
WriteHeap(v2, 10 * ReadHeap(v2))
SymbolTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 200
2 -> 30
Lock Table:
1 -> 3
2 -> 4

ID: 5
Execution Stack:
WriteHeap(v2, 5 + ReadHeap(v2))|unlock(q)
lock(q)
SymbolTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 200
2 -> 30
Lock Table:
1 -> 3
2 -> 4

ID: 1
Execution Stack:
NopStatement|lock(x)|Print(ReadHeap(v1))|unlock(x)|lock(q)|Print(ReadHeap(v2))|unlock(q)
SymbolTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 199
2 -> 300
Lock Table:
1 -> 3
2 -> 4

ID: 3
Execution Stack:
unlock(x)
SymbolTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 199
2 -> 300
Lock Table:
1 -> 3
2 -> 4

ID: 4
Execution Stack:
unlock(q)
SymbolTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 199
2 -> 300
Lock Table:
1 -> 3
2 -> 4

ID: 5
Execution Stack:
WriteHeap(v2, 5 + ReadHeap(v2))|unlock(q)
lock(q)
SymbolTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 199
2 -> 300
Lock Table:
1 -> 3
2 -> 4

ID: 1
Execution Stack:
NopStatement|lock(x)|Print(ReadHeap(v1))|unlock(x)|lock(q)|Print(ReadHeap(v2))|unlock(q)
SymbolTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 199
2 -> 300
Lock Table:
1 -> 3
2 -> 4

ID: 3
Execution Stack:
unlock(x)
SymbolTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 199
2 -> 300
Lock Table:
1 -> 3
2 -> 4

ID: 4
Execution Stack:
unlock(q)
SymbolTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 199
2 -> 300
Lock Table:
1 -> 3
2 -> 4

ID: 5
Execution Stack:
WriteHeap(v2, 5 + ReadHeap(v2))|unlock(q)
lock(q)
SymbolTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 199
2 -> 300
Lock Table:
1 -> 3
2 -> 4

ID: 1
Execution Stack:
lock(x)|Print(ReadHeap(v1))|unlock(x)|lock(q)|Print(ReadHeap(v2))|unlock(q)
NopStatement
SymbolTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 199
2 -> 300
Lock Table:
1 -> -1
2 -> 5

ID: 3
Execution Stack:
SymbolTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 199
2 -> 300
Lock Table:
1 -> -1
2 -> 5

ID: 4
Execution Stack:
SymbolTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 199
2 -> 300
Lock Table:
1 -> -1
2 -> 5

ID: 5
Execution Stack:
WriteHeap(v2, 5 + ReadHeap(v2))|unlock(q)
SymbolTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 199
2 -> 300
Lock Table:
1 -> -1
2 -> 5

ID: 1
Execution Stack:
lock(x)|Print(ReadHeap(v1))|unlock(x)|lock(q)|Print(ReadHeap(v2))|unlock(q)
NopStatement
SymbolTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 199
2 -> 300
Lock Table:
1 -> -1
2 -> 5

ID: 5
Execution Stack:
WriteHeap(v2, 5 + ReadHeap(v2))|unlock(q)
SymbolTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 199
2 -> 300
Lock Table:
1 -> -1
2 -> 5

ID: 1
Execution Stack:
lock(x)|Print(ReadHeap(v1))|unlock(x)|lock(q)|Print(ReadHeap(v2))|unlock(q)
SymbolTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 199
2 -> 300
Lock Table:
1 -> -1
2 -> 5

ID: 5
Execution Stack:
unlock(q)
WriteHeap(v2, 5 + ReadHeap(v2))
SymbolTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 199
2 -> 300
Lock Table:
1 -> -1
2 -> 5

ID: 1
Execution Stack:
lock(x)|Print(ReadHeap(v1))|unlock(x)|lock(q)|Print(ReadHeap(v2))|unlock(q)
SymbolTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 199
2 -> 300
Lock Table:
1 -> -1
2 -> 5

ID: 5
Execution Stack:
unlock(q)
WriteHeap(v2, 5 + ReadHeap(v2))
SymbolTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 199
2 -> 300
Lock Table:
1 -> -1
2 -> 5

ID: 1
Execution Stack:
Print(ReadHeap(v1))|unlock(x)|lock(q)|Print(ReadHeap(v2))|unlock(q)
lock(x)
SymbolTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 199
2 -> 305
Lock Table:
1 -> -1
2 -> 5

ID: 5
Execution Stack:
unlock(q)
SymbolTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 199
2 -> 305
Lock Table:
1 -> -1
2 -> 5

ID: 1
Execution Stack:
Print(ReadHeap(v1))|unlock(x)|lock(q)|Print(ReadHeap(v2))|unlock(q)
lock(x)
SymbolTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 199
2 -> 305
Lock Table:
1 -> -1
2 -> 5

ID: 5
Execution Stack:
unlock(q)
SymbolTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 199
2 -> 305
Lock Table:
1 -> -1
2 -> 5

ID: 1
Execution Stack:
Print(ReadHeap(v1))|unlock(x)|lock(q)|Print(ReadHeap(v2))|unlock(q)
SymbolTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 199
2 -> 305
Lock Table:
1 -> 1
2 -> -1

ID: 5
Execution Stack:
SymbolTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 199
2 -> 305
Lock Table:
1 -> 1
2 -> -1

ID: 1
Execution Stack:
Print(ReadHeap(v1))|unlock(x)|lock(q)|Print(ReadHeap(v2))|unlock(q)
SymbolTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 199
2 -> 305
Lock Table:
1 -> 1
2 -> -1

ID: 1
Execution Stack:
unlock(x)|lock(q)|Print(ReadHeap(v2))|unlock(q)
Print(ReadHeap(v1))
SymbolTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 199
2 -> 305
Lock Table:
1 -> 1
2 -> -1

ID: 1
Execution Stack:
unlock(x)|lock(q)|Print(ReadHeap(v2))|unlock(q)
Print(ReadHeap(v1))
SymbolTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
File table:
Heap memory:
1 -> 199
2 -> 305
Lock Table:
1 -> 1
2 -> -1

ID: 1
Execution Stack:
unlock(x)|lock(q)|Print(ReadHeap(v2))|unlock(q)
SymbolTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
199
File table:
Heap memory:
1 -> 199
2 -> 305
Lock Table:
1 -> 1
2 -> -1

ID: 1
Execution Stack:
unlock(x)|lock(q)|Print(ReadHeap(v2))|unlock(q)
SymbolTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
199
File table:
Heap memory:
1 -> 199
2 -> 305
Lock Table:
1 -> 1
2 -> -1

ID: 1
Execution Stack:
lock(q)|Print(ReadHeap(v2))|unlock(q)
unlock(x)
SymbolTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
199
File table:
Heap memory:
1 -> 199
2 -> 305
Lock Table:
1 -> 1
2 -> -1

ID: 1
Execution Stack:
lock(q)|Print(ReadHeap(v2))|unlock(q)
unlock(x)
SymbolTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
199
File table:
Heap memory:
1 -> 199
2 -> 305
Lock Table:
1 -> 1
2 -> -1

ID: 1
Execution Stack:
lock(q)|Print(ReadHeap(v2))|unlock(q)
SymbolTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
199
File table:
Heap memory:
1 -> 199
2 -> 305
Lock Table:
1 -> -1
2 -> -1

ID: 1
Execution Stack:
lock(q)|Print(ReadHeap(v2))|unlock(q)
SymbolTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
199
File table:
Heap memory:
1 -> 199
2 -> 305
Lock Table:
1 -> -1
2 -> -1

ID: 1
Execution Stack:
Print(ReadHeap(v2))|unlock(q)
lock(q)
SymbolTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
199
File table:
Heap memory:
1 -> 199
2 -> 305
Lock Table:
1 -> -1
2 -> -1

ID: 1
Execution Stack:
Print(ReadHeap(v2))|unlock(q)
lock(q)
SymbolTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
199
File table:
Heap memory:
1 -> 199
2 -> 305
Lock Table:
1 -> -1
2 -> -1

ID: 1
Execution Stack:
Print(ReadHeap(v2))|unlock(q)
SymbolTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
199
File table:
Heap memory:
1 -> 199
2 -> 305
Lock Table:
1 -> -1
2 -> 1

ID: 1
Execution Stack:
Print(ReadHeap(v2))|unlock(q)
SymbolTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
199
File table:
Heap memory:
1 -> 199
2 -> 305
Lock Table:
1 -> -1
2 -> 1

ID: 1
Execution Stack:
unlock(q)
Print(ReadHeap(v2))
SymbolTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
199
File table:
Heap memory:
1 -> 199
2 -> 305
Lock Table:
1 -> -1
2 -> 1

ID: 1
Execution Stack:
unlock(q)
Print(ReadHeap(v2))
SymbolTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
199
File table:
Heap memory:
1 -> 199
2 -> 305
Lock Table:
1 -> -1
2 -> 1

ID: 1
Execution Stack:
unlock(q)
SymbolTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
199
305
File table:
Heap memory:
1 -> 199
2 -> 305
Lock Table:
1 -> -1
2 -> 1

ID: 1
Execution Stack:
unlock(q)
SymbolTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
199
305
File table:
Heap memory:
1 -> 199
2 -> 305
Lock Table:
1 -> -1
2 -> 1

ID: 1
Execution Stack:
SymbolTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
Output list:
199
305
File table:
Heap memory:
1 -> 199
2 -> 305
Lock Table:
1 -> -1
2 -> -1

