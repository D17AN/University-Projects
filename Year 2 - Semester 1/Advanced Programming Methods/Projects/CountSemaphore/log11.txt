ID: 1
Execution Stack:
Reference(int) v1|int cnt|New(v1,1)|createSemaphore(cnt, ReadHeap(v1))|Fork(acquire(cnt)|WriteHeap(v1, 10 * ReadHeap(v1))|Print(ReadHeap(v1))|release(cnt))|Fork(acquire(cnt)|WriteHeap(v1, 10 * ReadHeap(v1))|WriteHeap(v1, 2 * ReadHeap(v1))|Print(ReadHeap(v1))|release(cnt))|acquire(cnt)|Print(1 - ReadHeap(v1))|release(cnt)
SymbolTable:
Output list:
File table:
Heap memory:
Semaphore table:

ID: 1
Execution Stack:
int cnt|New(v1,1)|createSemaphore(cnt, ReadHeap(v1))|Fork(acquire(cnt)|WriteHeap(v1, 10 * ReadHeap(v1))|Print(ReadHeap(v1))|release(cnt))|Fork(acquire(cnt)|WriteHeap(v1, 10 * ReadHeap(v1))|WriteHeap(v1, 2 * ReadHeap(v1))|Print(ReadHeap(v1))|release(cnt))|acquire(cnt)|Print(1 - ReadHeap(v1))|release(cnt)
Reference(int) v1
SymbolTable:
Output list:
File table:
Heap memory:
Semaphore table:

ID: 1
Execution Stack:
int cnt|New(v1,1)|createSemaphore(cnt, ReadHeap(v1))|Fork(acquire(cnt)|WriteHeap(v1, 10 * ReadHeap(v1))|Print(ReadHeap(v1))|release(cnt))|Fork(acquire(cnt)|WriteHeap(v1, 10 * ReadHeap(v1))|WriteHeap(v1, 2 * ReadHeap(v1))|Print(ReadHeap(v1))|release(cnt))|acquire(cnt)|Print(1 - ReadHeap(v1))|release(cnt)
Reference(int) v1
SymbolTable:
Output list:
File table:
Heap memory:
Semaphore table:

ID: 1
Execution Stack:
int cnt|New(v1,1)|createSemaphore(cnt, ReadHeap(v1))|Fork(acquire(cnt)|WriteHeap(v1, 10 * ReadHeap(v1))|Print(ReadHeap(v1))|release(cnt))|Fork(acquire(cnt)|WriteHeap(v1, 10 * ReadHeap(v1))|WriteHeap(v1, 2 * ReadHeap(v1))|Print(ReadHeap(v1))|release(cnt))|acquire(cnt)|Print(1 - ReadHeap(v1))|release(cnt)
SymbolTable:
v1 -> (0, int)
Output list:
File table:
Heap memory:
Semaphore table:

ID: 1
Execution Stack:
int cnt|New(v1,1)|createSemaphore(cnt, ReadHeap(v1))|Fork(acquire(cnt)|WriteHeap(v1, 10 * ReadHeap(v1))|Print(ReadHeap(v1))|release(cnt))|Fork(acquire(cnt)|WriteHeap(v1, 10 * ReadHeap(v1))|WriteHeap(v1, 2 * ReadHeap(v1))|Print(ReadHeap(v1))|release(cnt))|acquire(cnt)|Print(1 - ReadHeap(v1))|release(cnt)
SymbolTable:
v1 -> (0, int)
Output list:
File table:
Heap memory:
Semaphore table:

ID: 1
Execution Stack:
New(v1,1)|createSemaphore(cnt, ReadHeap(v1))|Fork(acquire(cnt)|WriteHeap(v1, 10 * ReadHeap(v1))|Print(ReadHeap(v1))|release(cnt))|Fork(acquire(cnt)|WriteHeap(v1, 10 * ReadHeap(v1))|WriteHeap(v1, 2 * ReadHeap(v1))|Print(ReadHeap(v1))|release(cnt))|acquire(cnt)|Print(1 - ReadHeap(v1))|release(cnt)
int cnt
SymbolTable:
v1 -> (0, int)
Output list:
File table:
Heap memory:
Semaphore table:

ID: 1
Execution Stack:
New(v1,1)|createSemaphore(cnt, ReadHeap(v1))|Fork(acquire(cnt)|WriteHeap(v1, 10 * ReadHeap(v1))|Print(ReadHeap(v1))|release(cnt))|Fork(acquire(cnt)|WriteHeap(v1, 10 * ReadHeap(v1))|WriteHeap(v1, 2 * ReadHeap(v1))|Print(ReadHeap(v1))|release(cnt))|acquire(cnt)|Print(1 - ReadHeap(v1))|release(cnt)
int cnt
SymbolTable:
v1 -> (0, int)
Output list:
File table:
Heap memory:
Semaphore table:

ID: 1
Execution Stack:
New(v1,1)|createSemaphore(cnt, ReadHeap(v1))|Fork(acquire(cnt)|WriteHeap(v1, 10 * ReadHeap(v1))|Print(ReadHeap(v1))|release(cnt))|Fork(acquire(cnt)|WriteHeap(v1, 10 * ReadHeap(v1))|WriteHeap(v1, 2 * ReadHeap(v1))|Print(ReadHeap(v1))|release(cnt))|acquire(cnt)|Print(1 - ReadHeap(v1))|release(cnt)
SymbolTable:
cnt -> 0
v1 -> (0, int)
Output list:
File table:
Heap memory:
Semaphore table:

ID: 1
Execution Stack:
New(v1,1)|createSemaphore(cnt, ReadHeap(v1))|Fork(acquire(cnt)|WriteHeap(v1, 10 * ReadHeap(v1))|Print(ReadHeap(v1))|release(cnt))|Fork(acquire(cnt)|WriteHeap(v1, 10 * ReadHeap(v1))|WriteHeap(v1, 2 * ReadHeap(v1))|Print(ReadHeap(v1))|release(cnt))|acquire(cnt)|Print(1 - ReadHeap(v1))|release(cnt)
SymbolTable:
cnt -> 0
v1 -> (0, int)
Output list:
File table:
Heap memory:
Semaphore table:

ID: 1
Execution Stack:
createSemaphore(cnt, ReadHeap(v1))|Fork(acquire(cnt)|WriteHeap(v1, 10 * ReadHeap(v1))|Print(ReadHeap(v1))|release(cnt))|Fork(acquire(cnt)|WriteHeap(v1, 10 * ReadHeap(v1))|WriteHeap(v1, 2 * ReadHeap(v1))|Print(ReadHeap(v1))|release(cnt))|acquire(cnt)|Print(1 - ReadHeap(v1))|release(cnt)
New(v1,1)
SymbolTable:
cnt -> 0
v1 -> (0, int)
Output list:
File table:
Heap memory:
Semaphore table:

ID: 1
Execution Stack:
createSemaphore(cnt, ReadHeap(v1))|Fork(acquire(cnt)|WriteHeap(v1, 10 * ReadHeap(v1))|Print(ReadHeap(v1))|release(cnt))|Fork(acquire(cnt)|WriteHeap(v1, 10 * ReadHeap(v1))|WriteHeap(v1, 2 * ReadHeap(v1))|Print(ReadHeap(v1))|release(cnt))|acquire(cnt)|Print(1 - ReadHeap(v1))|release(cnt)
New(v1,1)
SymbolTable:
cnt -> 0
v1 -> (0, int)
Output list:
File table:
Heap memory:
Semaphore table:

ID: 1
Execution Stack:
createSemaphore(cnt, ReadHeap(v1))|Fork(acquire(cnt)|WriteHeap(v1, 10 * ReadHeap(v1))|Print(ReadHeap(v1))|release(cnt))|Fork(acquire(cnt)|WriteHeap(v1, 10 * ReadHeap(v1))|WriteHeap(v1, 2 * ReadHeap(v1))|Print(ReadHeap(v1))|release(cnt))|acquire(cnt)|Print(1 - ReadHeap(v1))|release(cnt)
SymbolTable:
cnt -> 0
v1 -> (1, int)
Output list:
File table:
Heap memory:
1 -> 1
Semaphore table:

ID: 1
Execution Stack:
createSemaphore(cnt, ReadHeap(v1))|Fork(acquire(cnt)|WriteHeap(v1, 10 * ReadHeap(v1))|Print(ReadHeap(v1))|release(cnt))|Fork(acquire(cnt)|WriteHeap(v1, 10 * ReadHeap(v1))|WriteHeap(v1, 2 * ReadHeap(v1))|Print(ReadHeap(v1))|release(cnt))|acquire(cnt)|Print(1 - ReadHeap(v1))|release(cnt)
SymbolTable:
cnt -> 0
v1 -> (1, int)
Output list:
File table:
Heap memory:
1 -> 1
Semaphore table:

ID: 1
Execution Stack:
Fork(acquire(cnt)|WriteHeap(v1, 10 * ReadHeap(v1))|Print(ReadHeap(v1))|release(cnt))|Fork(acquire(cnt)|WriteHeap(v1, 10 * ReadHeap(v1))|WriteHeap(v1, 2 * ReadHeap(v1))|Print(ReadHeap(v1))|release(cnt))|acquire(cnt)|Print(1 - ReadHeap(v1))|release(cnt)
createSemaphore(cnt, ReadHeap(v1))
SymbolTable:
cnt -> 0
v1 -> (1, int)
Output list:
File table:
Heap memory:
1 -> 1
Semaphore table:

ID: 1
Execution Stack:
Fork(acquire(cnt)|WriteHeap(v1, 10 * ReadHeap(v1))|Print(ReadHeap(v1))|release(cnt))|Fork(acquire(cnt)|WriteHeap(v1, 10 * ReadHeap(v1))|WriteHeap(v1, 2 * ReadHeap(v1))|Print(ReadHeap(v1))|release(cnt))|acquire(cnt)|Print(1 - ReadHeap(v1))|release(cnt)
createSemaphore(cnt, ReadHeap(v1))
SymbolTable:
cnt -> 0
v1 -> (1, int)
Output list:
File table:
Heap memory:
1 -> 1
Semaphore table:

ID: 1
Execution Stack:
Fork(acquire(cnt)|WriteHeap(v1, 10 * ReadHeap(v1))|Print(ReadHeap(v1))|release(cnt))|Fork(acquire(cnt)|WriteHeap(v1, 10 * ReadHeap(v1))|WriteHeap(v1, 2 * ReadHeap(v1))|Print(ReadHeap(v1))|release(cnt))|acquire(cnt)|Print(1 - ReadHeap(v1))|release(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
Output list:
File table:
Heap memory:
1 -> 1
Semaphore table:
1 -> (1, [])

ID: 1
Execution Stack:
Fork(acquire(cnt)|WriteHeap(v1, 10 * ReadHeap(v1))|Print(ReadHeap(v1))|release(cnt))|Fork(acquire(cnt)|WriteHeap(v1, 10 * ReadHeap(v1))|WriteHeap(v1, 2 * ReadHeap(v1))|Print(ReadHeap(v1))|release(cnt))|acquire(cnt)|Print(1 - ReadHeap(v1))|release(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
Output list:
File table:
Heap memory:
1 -> 1
Semaphore table:
1 -> (1, [])

ID: 1
Execution Stack:
Fork(acquire(cnt)|WriteHeap(v1, 10 * ReadHeap(v1))|WriteHeap(v1, 2 * ReadHeap(v1))|Print(ReadHeap(v1))|release(cnt))|acquire(cnt)|Print(1 - ReadHeap(v1))|release(cnt)
Fork(acquire(cnt)|WriteHeap(v1, 10 * ReadHeap(v1))|Print(ReadHeap(v1))|release(cnt))
SymbolTable:
cnt -> 1
v1 -> (1, int)
Output list:
File table:
Heap memory:
1 -> 1
Semaphore table:
1 -> (1, [])

ID: 1
Execution Stack:
Fork(acquire(cnt)|WriteHeap(v1, 10 * ReadHeap(v1))|WriteHeap(v1, 2 * ReadHeap(v1))|Print(ReadHeap(v1))|release(cnt))|acquire(cnt)|Print(1 - ReadHeap(v1))|release(cnt)
Fork(acquire(cnt)|WriteHeap(v1, 10 * ReadHeap(v1))|Print(ReadHeap(v1))|release(cnt))
SymbolTable:
cnt -> 1
v1 -> (1, int)
Output list:
File table:
Heap memory:
1 -> 1
Semaphore table:
1 -> (1, [])

ID: 1
Execution Stack:
Fork(acquire(cnt)|WriteHeap(v1, 10 * ReadHeap(v1))|WriteHeap(v1, 2 * ReadHeap(v1))|Print(ReadHeap(v1))|release(cnt))|acquire(cnt)|Print(1 - ReadHeap(v1))|release(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
Output list:
File table:
Heap memory:
1 -> 1
Semaphore table:
1 -> (1, [])

ID: 2
Execution Stack:
acquire(cnt)|WriteHeap(v1, 10 * ReadHeap(v1))|Print(ReadHeap(v1))|release(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
Output list:
File table:
Heap memory:
1 -> 1
Semaphore table:
1 -> (1, [])

ID: 1
Execution Stack:
Fork(acquire(cnt)|WriteHeap(v1, 10 * ReadHeap(v1))|WriteHeap(v1, 2 * ReadHeap(v1))|Print(ReadHeap(v1))|release(cnt))|acquire(cnt)|Print(1 - ReadHeap(v1))|release(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
Output list:
File table:
Heap memory:
1 -> 1
Semaphore table:
1 -> (1, [])

ID: 2
Execution Stack:
acquire(cnt)|WriteHeap(v1, 10 * ReadHeap(v1))|Print(ReadHeap(v1))|release(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
Output list:
File table:
Heap memory:
1 -> 1
Semaphore table:
1 -> (1, [])

ID: 1
Execution Stack:
acquire(cnt)|Print(1 - ReadHeap(v1))|release(cnt)
Fork(acquire(cnt)|WriteHeap(v1, 10 * ReadHeap(v1))|WriteHeap(v1, 2 * ReadHeap(v1))|Print(ReadHeap(v1))|release(cnt))
SymbolTable:
cnt -> 1
v1 -> (1, int)
Output list:
File table:
Heap memory:
1 -> 1
Semaphore table:
1 -> (1, [])

ID: 2
Execution Stack:
WriteHeap(v1, 10 * ReadHeap(v1))|Print(ReadHeap(v1))|release(cnt)
acquire(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
Output list:
File table:
Heap memory:
1 -> 1
Semaphore table:
1 -> (1, [])

ID: 1
Execution Stack:
acquire(cnt)|Print(1 - ReadHeap(v1))|release(cnt)
Fork(acquire(cnt)|WriteHeap(v1, 10 * ReadHeap(v1))|WriteHeap(v1, 2 * ReadHeap(v1))|Print(ReadHeap(v1))|release(cnt))
SymbolTable:
cnt -> 1
v1 -> (1, int)
Output list:
File table:
Heap memory:
1 -> 1
Semaphore table:
1 -> (1, [])

ID: 2
Execution Stack:
WriteHeap(v1, 10 * ReadHeap(v1))|Print(ReadHeap(v1))|release(cnt)
acquire(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
Output list:
File table:
Heap memory:
1 -> 1
Semaphore table:
1 -> (1, [])

ID: 1
Execution Stack:
acquire(cnt)|Print(1 - ReadHeap(v1))|release(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
Output list:
File table:
Heap memory:
1 -> 1
Semaphore table:
1 -> (1, [2])

ID: 2
Execution Stack:
WriteHeap(v1, 10 * ReadHeap(v1))|Print(ReadHeap(v1))|release(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
Output list:
File table:
Heap memory:
1 -> 1
Semaphore table:
1 -> (1, [2])

ID: 3
Execution Stack:
acquire(cnt)|WriteHeap(v1, 10 * ReadHeap(v1))|WriteHeap(v1, 2 * ReadHeap(v1))|Print(ReadHeap(v1))|release(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
Output list:
File table:
Heap memory:
1 -> 1
Semaphore table:
1 -> (1, [2])

ID: 1
Execution Stack:
acquire(cnt)|Print(1 - ReadHeap(v1))|release(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
Output list:
File table:
Heap memory:
1 -> 1
Semaphore table:
1 -> (1, [2])

ID: 2
Execution Stack:
WriteHeap(v1, 10 * ReadHeap(v1))|Print(ReadHeap(v1))|release(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
Output list:
File table:
Heap memory:
1 -> 1
Semaphore table:
1 -> (1, [2])

ID: 3
Execution Stack:
acquire(cnt)|WriteHeap(v1, 10 * ReadHeap(v1))|WriteHeap(v1, 2 * ReadHeap(v1))|Print(ReadHeap(v1))|release(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
Output list:
File table:
Heap memory:
1 -> 1
Semaphore table:
1 -> (1, [2])

ID: 1
Execution Stack:
Print(1 - ReadHeap(v1))|release(cnt)
acquire(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
Output list:
File table:
Heap memory:
1 -> 1
Semaphore table:
1 -> (1, [2])

ID: 2
Execution Stack:
Print(ReadHeap(v1))|release(cnt)
WriteHeap(v1, 10 * ReadHeap(v1))
SymbolTable:
cnt -> 1
v1 -> (1, int)
Output list:
File table:
Heap memory:
1 -> 1
Semaphore table:
1 -> (1, [2])

ID: 3
Execution Stack:
WriteHeap(v1, 10 * ReadHeap(v1))|WriteHeap(v1, 2 * ReadHeap(v1))|Print(ReadHeap(v1))|release(cnt)
acquire(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
Output list:
File table:
Heap memory:
1 -> 1
Semaphore table:
1 -> (1, [2])

ID: 1
Execution Stack:
Print(1 - ReadHeap(v1))|release(cnt)
acquire(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
Output list:
File table:
Heap memory:
1 -> 1
Semaphore table:
1 -> (1, [2])

ID: 2
Execution Stack:
Print(ReadHeap(v1))|release(cnt)
WriteHeap(v1, 10 * ReadHeap(v1))
SymbolTable:
cnt -> 1
v1 -> (1, int)
Output list:
File table:
Heap memory:
1 -> 1
Semaphore table:
1 -> (1, [2])

ID: 3
Execution Stack:
WriteHeap(v1, 10 * ReadHeap(v1))|WriteHeap(v1, 2 * ReadHeap(v1))|Print(ReadHeap(v1))|release(cnt)
acquire(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
Output list:
File table:
Heap memory:
1 -> 1
Semaphore table:
1 -> (1, [2])

ID: 1
Execution Stack:
Print(1 - ReadHeap(v1))|release(cnt)
acquire(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
Output list:
File table:
Heap memory:
1 -> 10
Semaphore table:
1 -> (1, [2])

ID: 2
Execution Stack:
Print(ReadHeap(v1))|release(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
Output list:
File table:
Heap memory:
1 -> 10
Semaphore table:
1 -> (1, [2])

ID: 3
Execution Stack:
WriteHeap(v1, 10 * ReadHeap(v1))|WriteHeap(v1, 2 * ReadHeap(v1))|Print(ReadHeap(v1))|release(cnt)
acquire(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
Output list:
File table:
Heap memory:
1 -> 10
Semaphore table:
1 -> (1, [2])

ID: 1
Execution Stack:
Print(1 - ReadHeap(v1))|release(cnt)
acquire(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
Output list:
File table:
Heap memory:
1 -> 10
Semaphore table:
1 -> (1, [2])

ID: 2
Execution Stack:
Print(ReadHeap(v1))|release(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
Output list:
File table:
Heap memory:
1 -> 10
Semaphore table:
1 -> (1, [2])

ID: 3
Execution Stack:
WriteHeap(v1, 10 * ReadHeap(v1))|WriteHeap(v1, 2 * ReadHeap(v1))|Print(ReadHeap(v1))|release(cnt)
acquire(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
Output list:
File table:
Heap memory:
1 -> 10
Semaphore table:
1 -> (1, [2])

ID: 1
Execution Stack:
Print(1 - ReadHeap(v1))|release(cnt)
acquire(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
Output list:
File table:
Heap memory:
1 -> 10
Semaphore table:
1 -> (1, [2])

ID: 2
Execution Stack:
release(cnt)
Print(ReadHeap(v1))
SymbolTable:
cnt -> 1
v1 -> (1, int)
Output list:
File table:
Heap memory:
1 -> 10
Semaphore table:
1 -> (1, [2])

ID: 3
Execution Stack:
WriteHeap(v1, 10 * ReadHeap(v1))|WriteHeap(v1, 2 * ReadHeap(v1))|Print(ReadHeap(v1))|release(cnt)
acquire(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
Output list:
File table:
Heap memory:
1 -> 10
Semaphore table:
1 -> (1, [2])

ID: 1
Execution Stack:
Print(1 - ReadHeap(v1))|release(cnt)
acquire(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
Output list:
File table:
Heap memory:
1 -> 10
Semaphore table:
1 -> (1, [2])

ID: 2
Execution Stack:
release(cnt)
Print(ReadHeap(v1))
SymbolTable:
cnt -> 1
v1 -> (1, int)
Output list:
File table:
Heap memory:
1 -> 10
Semaphore table:
1 -> (1, [2])

ID: 3
Execution Stack:
WriteHeap(v1, 10 * ReadHeap(v1))|WriteHeap(v1, 2 * ReadHeap(v1))|Print(ReadHeap(v1))|release(cnt)
acquire(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
Output list:
File table:
Heap memory:
1 -> 10
Semaphore table:
1 -> (1, [2])

ID: 1
Execution Stack:
Print(1 - ReadHeap(v1))|release(cnt)
acquire(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
Output list:
10
File table:
Heap memory:
1 -> 10
Semaphore table:
1 -> (1, [2])

ID: 2
Execution Stack:
release(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
Output list:
10
File table:
Heap memory:
1 -> 10
Semaphore table:
1 -> (1, [2])

ID: 3
Execution Stack:
WriteHeap(v1, 10 * ReadHeap(v1))|WriteHeap(v1, 2 * ReadHeap(v1))|Print(ReadHeap(v1))|release(cnt)
acquire(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
Output list:
10
File table:
Heap memory:
1 -> 10
Semaphore table:
1 -> (1, [2])

ID: 1
Execution Stack:
Print(1 - ReadHeap(v1))|release(cnt)
acquire(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
Output list:
10
File table:
Heap memory:
1 -> 10
Semaphore table:
1 -> (1, [2])

ID: 2
Execution Stack:
release(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
Output list:
10
File table:
Heap memory:
1 -> 10
Semaphore table:
1 -> (1, [2])

ID: 3
Execution Stack:
WriteHeap(v1, 10 * ReadHeap(v1))|WriteHeap(v1, 2 * ReadHeap(v1))|Print(ReadHeap(v1))|release(cnt)
acquire(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
Output list:
10
File table:
Heap memory:
1 -> 10
Semaphore table:
1 -> (1, [2])

ID: 1
Execution Stack:
Print(1 - ReadHeap(v1))|release(cnt)
acquire(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
Output list:
10
File table:
Heap memory:
1 -> 10
Semaphore table:
1 -> (1, [])

ID: 2
Execution Stack:
SymbolTable:
cnt -> 1
v1 -> (1, int)
Output list:
10
File table:
Heap memory:
1 -> 10
Semaphore table:
1 -> (1, [])

ID: 3
Execution Stack:
WriteHeap(v1, 10 * ReadHeap(v1))|WriteHeap(v1, 2 * ReadHeap(v1))|Print(ReadHeap(v1))|release(cnt)
acquire(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
Output list:
10
File table:
Heap memory:
1 -> 10
Semaphore table:
1 -> (1, [])

ID: 1
Execution Stack:
Print(1 - ReadHeap(v1))|release(cnt)
acquire(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
Output list:
10
File table:
Heap memory:
1 -> 10
Semaphore table:
1 -> (1, [])

ID: 3
Execution Stack:
WriteHeap(v1, 10 * ReadHeap(v1))|WriteHeap(v1, 2 * ReadHeap(v1))|Print(ReadHeap(v1))|release(cnt)
acquire(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
Output list:
10
File table:
Heap memory:
1 -> 10
Semaphore table:
1 -> (1, [])

ID: 1
Execution Stack:
Print(1 - ReadHeap(v1))|release(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
Output list:
10
File table:
Heap memory:
1 -> 10
Semaphore table:
1 -> (1, [1])

ID: 3
Execution Stack:
WriteHeap(v1, 10 * ReadHeap(v1))|WriteHeap(v1, 2 * ReadHeap(v1))|Print(ReadHeap(v1))|release(cnt)
acquire(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
Output list:
10
File table:
Heap memory:
1 -> 10
Semaphore table:
1 -> (1, [1])

ID: 1
Execution Stack:
Print(1 - ReadHeap(v1))|release(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
Output list:
10
File table:
Heap memory:
1 -> 10
Semaphore table:
1 -> (1, [1])

ID: 3
Execution Stack:
WriteHeap(v1, 10 * ReadHeap(v1))|WriteHeap(v1, 2 * ReadHeap(v1))|Print(ReadHeap(v1))|release(cnt)
acquire(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
Output list:
10
File table:
Heap memory:
1 -> 10
Semaphore table:
1 -> (1, [1])

ID: 1
Execution Stack:
release(cnt)
Print(1 - ReadHeap(v1))
SymbolTable:
cnt -> 1
v1 -> (1, int)
Output list:
10
File table:
Heap memory:
1 -> 10
Semaphore table:
1 -> (1, [1])

ID: 3
Execution Stack:
WriteHeap(v1, 10 * ReadHeap(v1))|WriteHeap(v1, 2 * ReadHeap(v1))|Print(ReadHeap(v1))|release(cnt)
acquire(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
Output list:
10
File table:
Heap memory:
1 -> 10
Semaphore table:
1 -> (1, [1])

ID: 1
Execution Stack:
release(cnt)
Print(1 - ReadHeap(v1))
SymbolTable:
cnt -> 1
v1 -> (1, int)
Output list:
10
File table:
Heap memory:
1 -> 10
Semaphore table:
1 -> (1, [1])

ID: 3
Execution Stack:
WriteHeap(v1, 10 * ReadHeap(v1))|WriteHeap(v1, 2 * ReadHeap(v1))|Print(ReadHeap(v1))|release(cnt)
acquire(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
Output list:
10
File table:
Heap memory:
1 -> 10
Semaphore table:
1 -> (1, [1])

ID: 1
Execution Stack:
release(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
Output list:
10
-9
File table:
Heap memory:
1 -> 10
Semaphore table:
1 -> (1, [1])

ID: 3
Execution Stack:
WriteHeap(v1, 10 * ReadHeap(v1))|WriteHeap(v1, 2 * ReadHeap(v1))|Print(ReadHeap(v1))|release(cnt)
acquire(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
Output list:
10
-9
File table:
Heap memory:
1 -> 10
Semaphore table:
1 -> (1, [1])

ID: 1
Execution Stack:
release(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
Output list:
10
-9
File table:
Heap memory:
1 -> 10
Semaphore table:
1 -> (1, [1])

ID: 3
Execution Stack:
WriteHeap(v1, 10 * ReadHeap(v1))|WriteHeap(v1, 2 * ReadHeap(v1))|Print(ReadHeap(v1))|release(cnt)
acquire(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
Output list:
10
-9
File table:
Heap memory:
1 -> 10
Semaphore table:
1 -> (1, [1])

ID: 1
Execution Stack:
SymbolTable:
cnt -> 1
v1 -> (1, int)
Output list:
10
-9
File table:
Heap memory:
1 -> 10
Semaphore table:
1 -> (1, [3])

ID: 3
Execution Stack:
WriteHeap(v1, 10 * ReadHeap(v1))|WriteHeap(v1, 2 * ReadHeap(v1))|Print(ReadHeap(v1))|release(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
Output list:
10
-9
File table:
Heap memory:
1 -> 10
Semaphore table:
1 -> (1, [3])

ID: 3
Execution Stack:
WriteHeap(v1, 10 * ReadHeap(v1))|WriteHeap(v1, 2 * ReadHeap(v1))|Print(ReadHeap(v1))|release(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
Output list:
10
-9
File table:
Heap memory:
1 -> 10
Semaphore table:
1 -> (1, [3])

ID: 3
Execution Stack:
WriteHeap(v1, 2 * ReadHeap(v1))|Print(ReadHeap(v1))|release(cnt)
WriteHeap(v1, 10 * ReadHeap(v1))
SymbolTable:
cnt -> 1
v1 -> (1, int)
Output list:
10
-9
File table:
Heap memory:
1 -> 10
Semaphore table:
1 -> (1, [3])

ID: 3
Execution Stack:
WriteHeap(v1, 2 * ReadHeap(v1))|Print(ReadHeap(v1))|release(cnt)
WriteHeap(v1, 10 * ReadHeap(v1))
SymbolTable:
cnt -> 1
v1 -> (1, int)
Output list:
10
-9
File table:
Heap memory:
1 -> 10
Semaphore table:
1 -> (1, [3])

ID: 3
Execution Stack:
WriteHeap(v1, 2 * ReadHeap(v1))|Print(ReadHeap(v1))|release(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
Output list:
10
-9
File table:
Heap memory:
1 -> 100
Semaphore table:
1 -> (1, [3])

ID: 3
Execution Stack:
WriteHeap(v1, 2 * ReadHeap(v1))|Print(ReadHeap(v1))|release(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
Output list:
10
-9
File table:
Heap memory:
1 -> 100
Semaphore table:
1 -> (1, [3])

ID: 3
Execution Stack:
Print(ReadHeap(v1))|release(cnt)
WriteHeap(v1, 2 * ReadHeap(v1))
SymbolTable:
cnt -> 1
v1 -> (1, int)
Output list:
10
-9
File table:
Heap memory:
1 -> 100
Semaphore table:
1 -> (1, [3])

ID: 3
Execution Stack:
Print(ReadHeap(v1))|release(cnt)
WriteHeap(v1, 2 * ReadHeap(v1))
SymbolTable:
cnt -> 1
v1 -> (1, int)
Output list:
10
-9
File table:
Heap memory:
1 -> 100
Semaphore table:
1 -> (1, [3])

ID: 3
Execution Stack:
Print(ReadHeap(v1))|release(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
Output list:
10
-9
File table:
Heap memory:
1 -> 200
Semaphore table:
1 -> (1, [3])

ID: 3
Execution Stack:
Print(ReadHeap(v1))|release(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
Output list:
10
-9
File table:
Heap memory:
1 -> 200
Semaphore table:
1 -> (1, [3])

ID: 3
Execution Stack:
release(cnt)
Print(ReadHeap(v1))
SymbolTable:
cnt -> 1
v1 -> (1, int)
Output list:
10
-9
File table:
Heap memory:
1 -> 200
Semaphore table:
1 -> (1, [3])

ID: 3
Execution Stack:
release(cnt)
Print(ReadHeap(v1))
SymbolTable:
cnt -> 1
v1 -> (1, int)
Output list:
10
-9
File table:
Heap memory:
1 -> 200
Semaphore table:
1 -> (1, [3])

ID: 3
Execution Stack:
release(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
Output list:
10
-9
200
File table:
Heap memory:
1 -> 200
Semaphore table:
1 -> (1, [3])

ID: 3
Execution Stack:
release(cnt)
SymbolTable:
cnt -> 1
v1 -> (1, int)
Output list:
10
-9
200
File table:
Heap memory:
1 -> 200
Semaphore table:
1 -> (1, [3])

ID: 3
Execution Stack:
SymbolTable:
cnt -> 1
v1 -> (1, int)
Output list:
10
-9
200
File table:
Heap memory:
1 -> 200
Semaphore table:
1 -> (1, [])

