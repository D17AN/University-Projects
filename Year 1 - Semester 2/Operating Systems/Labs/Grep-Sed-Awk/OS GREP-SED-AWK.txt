#Problem1
#Find all the usernames that logged in from "economica" on a Sunday
grep "\([\ ]\+\)\{2\}\(\<economica.*\)\([\ ]\+\)Sun" last.fake | awk '{print $1}' | sort -u

#Problem 2
#Find all the users that logged into the system after 11PM
cat last.fake | grep -o "^\([^\ ]*[\ ]\+\)\{6\}23:\([0-5][0-9]\)" | grep -o "^\([^\ ]*\)" | sort -u

#Problem 3
#Display the full names of the users having a username that starts with "m" and with a user ID divisible by 7.
cat passwd.fake | grep "^m([^:]*)" | awk -F: '$3 % 7 == 0 {print $5}'

#Problem 4
#Display all the distinct TTYs used by user root.
cat ps.fake | grep -o "^root\([\ ]\+\)\([^\ ]*[\ ]\+\)\{4\}\([^\ ]\+\)" | sed "s/\([\ ]\+\)/;/g" | cut -d ';' -f 6 | sort -u

#Problem 5
#Find the full names of all the users whose username ends in 88
cat passwd.fake | grep "^[^:]*88\>[:]" | cut -d ':' -f 5

#Problem 6
#Find all users whose user ID has three digits and starts with 23
cat passwd.fake | grep "^\([^:]*[:]\+\)\{2\}23[0-9][:]*" | cut -d ':' -f 5

#Problem 7
#Find all usersnames starting with "t" that logged on "pts/9"
cat last.fake | grep "^t[^\ ]*[\ ]\+pts/9" | cut -d ' ' -f 1 | sort

#Problem 8
#Find all the distinct usernames starting with "r" that are currently running programs, and display them duplicating 
#every vowel.
cat ps.fake | grep "^r[^\ ]*" | cut -d ' ' -f 1 | sed "s/\([aeiou]\)/\1\1/gi" | sort -u

#Problem 9
#Display all the distinct lines left in /etc/passwd after deleting all letter and digits and spaces.
cat passwd.fake | sed "s/\([a-zA-Z0-9\ ]\)//gi" | sort -u
